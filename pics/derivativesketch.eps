%!PS-Adobe-3.0 EPSF-3.0
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 333 67
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font XAJPSA+Helvetica-Oblique
%!FontType1-1.0: XAJPSA+Helvetica-Oblique
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.) readonly def
/FullName (Helvetica Oblique) readonly def
/FamilyName (Helvetica) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /XAJPSA+Helvetica-Oblique def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0.00021256 0.001 0 0] readonly def
/FontBBox [0 -214 709 718] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 43 /plus put
dup 44 /comma put
dup 61 /equal put
dup 80 /P put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF5
C3774E7B2651BA805CFCEABAB28B93EAAD2BB6A5CFC5D2544FF6219CFFA3F4C2
8843A005E5F618402AB519A75D5A7B712BDDC826203B0F8F0F0F6E7818F1453F
9BD8CBA277B11EF4CA4EB11EFFC56850663915F2E1D939BCE0A621F4E2028E4D
0AE8434DB4161B0CBF14A4F6EA9C62CB3BF9051FC63A4FDA75D8056CA1B059F3
853DEC8C386E851F9711E86DF10E449B0171EE395F1EF18DE1408FAB32A4DB1F
70A7A08482419B27C4B30548761503A7B5B22C1CF4228A7773A884020CF4DBB0
CBD7547F078945A3033D2BD0C5F56A2369D2536397FD7A5EF03B77F803359E31
8EF96B971889020D6E15AF71A89DD56105DD22E6DC495671192ACBD13CFFFB24
378CF251A753C0F825FE6D3BBD3FC5E52B908F0C19731DFB4F985FD4014F5B36
44F27FE8ACB5BD57E6C949EE8A447E960E397ABE245F244A3E73C5247C3E1100
8E2E0735915F7EFD179ACDF3C54F5C1F0FC413E3BC1ECE3565A74D1067B3CB52
47A6A880423183AF588180BEB9D787E6713B83BC05643DEC21059BE85EAFEE73
6D60AB335364F308ACA9D88DB3956A4486D42A8C2DCC1719CCED7892AFBFB9D8
8647A58B398F66DFD9E5B92E929190A3BEF694FF807D6433C66CF1D9291FA05A
D736E891EE78DE7B89DB1BDB1F3449EE3D85DE19452C0F057879813E6E950386
19B796B709B33828BFD2D432DE441BCB4543756EA9706D78974F01D5AA8036ED
FE2595560492472A59879B353230134A0807431EB2444EBDFA0FBA3FFC985F76
C2F94E407066BF7231D7C15D52CD793092D10E147D4D63CD9BEF02DB0D888C2B
6D2B6220EC1E8D5C9460FC9C031C7652BE718284D90A0FCB785E1A03EBC74CFE
C637BD84D7CAACDB956DFCB862798B2BBF17577B83C40CB274DCCC97774C9338
21C0D49CB6F6C10E8A6C7B8874677A92B7709AFB9CFE0EFE2DD8EE9ABAE7E19E
D41045D4ACC37123696ADC66C368D06D100252041C51523A63CCDD2B566EE543
E6F4B83C1CEB62017A250DDA248D470A648C9C05509003D6D7F5CB7AB3F265A9
128A64356A01B3023DA92326D6C994E937FA1F2A88E16532EE25DBE9577FD7C9
26D13FA7A92E3D317554FE88A9CB3F4ED35DED5EA47179448AD90350FCBBD88B
DC565426A1291891A9A19AAC2058C407F16C346EE7C665B163EAAE25E4F733A2
0B5BA5826F89F79DB5D072E98EC66294EF01D0F9F22FCA600EF69D1CA0EEE3DF
531C7B2B402A1945D40F67AE4E9BE2143A60D4C2AE168EB1C21EA66576D097B3
098638529C4B8F34E13C1948833CEC5666BCEA79F59AEB5D69A6F26941D417E8
E6D983CE0369697A14564043B9F7C0ECABE8754EE29E58355448ED321B67AF0F
C3CF2CE4B4F58EBFB9754580CF8475CE4990BE4A087E9810DDF0BE4205BD5FE4
B5E7FC8717AFEF4366C90001304B9D661E31BDAD9A3D3DF008289288E71BA5FB
9FAB324C890B05789C0980EEF236C9A78066312B31CC11D348729F306BA9EED8
EDAA18803CAD9A72FDE74BFA76CB6ACE6AA65C920237D4A4A72515D44BD47E09
6C15413D0EC60FE14BE469B2A04062BBE26332779F650226AC03AB28FDD23606
D3F4BA30D5296140F2FED7103168C19CEE8351A4EEBF869F9BA8A8F521BEC317
10D7EF1A513BF70BD50DC01117A394677A2A8AED7B1613E312B64A550C626C38
D987C73771EFE8623686B85A3DC0CE8D780DFEE49DFBF15A354EB47D5010B7E9
25C6BDADE3594A05ECB868BD7977868600C26CFD93E3D9486EB61246F920E899
B5D1A7E07BD37E01C4282DA86B63908F50FA5AC862F1040DE1635AED7935DE80
5868D6CEF0D9CC3B56906A3C2F9B3C3F3BFFA26A5EE0DFD5A21257F03505CA13
5A24AA2A533991FB1D6BC0A234D09E082291A6D837314F157DA9BCD408E5B7CC
A70954BD3DB1F7510A73AAFD75336EC5B8DF9E987DA5576B46E4B29299CFBD66
36E74C5A0B1868668DF4D2514FD78894C4DB1A1D9FAAA5BC48F4034C3ED26449
A1A4A1C2F662263EE28FE6D2DC51EC2F5591E8D95A36BCF38260C20AFA362C0B
CA6F1BF45D6AF5718003CF2708C0C08FD84022E3C34053CA07F0A178A02823A7
9C1FFD5852F1D3E589D607C327169E91BFCD7FD038574DEC5DCB14FEEFECF151
9184B86C78A699F4E49D31BA2631007987AF378E8D30C09D0D25226E2E9CBC07
67BE24AD6767ABB89CE4F31CF60F80DC7800C59126A32A907832848437C4D7F9
50D80E168B8A381F4B0DF32688864893375B41B4CFBB900CDAA61EA13EBF9425
F448E88561710126F9B961B0C649F8CC921C557BAB9DE51D4FAF3A5F39DE1959
E0E6370F9FA095776D6C5314D6D3416CBC2655FB6AD22CECC0BC536B65A00D00
BD162FCBD01AF97EF2F0E07F7E9AD041DA1058246AD352D5C09DE8A28EB97A8F
8CA579D6BFEB72671A02D4C1DAB55D7E176EF2DE0421DCE60D6D5CA78E8C6024
A099EAEFA69B6D38D4C7B9E755B28568DFAF78A773ED40318CC43B0A72F679F4
6AABDC28AEDEBC1CE2437D117FD36AAC9004296A941415B6865E3102C1913B18
E1742BE0D950C54D7CB4465748CB779E08318658A9719D72E7E75C1939F4F55B
0A87E79A01E1E586C09455A1D002E27F7FC8DD5768C50060BEF3F3734FCCAF11
26616DEC372909AE26756D601FB6946B52EC5D4E7B2BDF809CAB6C3C7F2CF178
A91FE56D9BD0A41F73028148341F25C8B2109495925F4F6AAA97BC22875F4E7C
2AE3D99B0F2A0EF7E706ED773A039B796430482404D4F2549DA9F402C9EDC034
7E67C3FB90E428C96FB9ECC007E686DDDC77C259CE655301C58482D156101818
4617D9E4ECF33B8EBD29C487D7DA6B1CB4E3ACA21085677E5D998E939515FC54
80A8B625F7CCD568C8270C0456FE91C4A1203C05D97035CE94AF79BD3F5BD612
1584CE9EEB3112C2DDE5DC99EE261993A062701D7543D4C128698F277472A053
415EAAF15F036670CE51DE320FB23B721A7D80CA48CE349418C5E81EB7CC3BAB
20531D0326D9B19EAE1E3FA989C31A49DE23F0BD7AAB994A60FC4B9FB862D813
BE715ECE5033C73D05E367C845147077E0F199C61DC157C8C7906951AFF058F2
CA6750CE0CA8F5A257553D0ED858A3F0F693342681B4AE9591247AD874DD1AE8
F1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F18_0 /XAJPSA+Helvetica-Oblique 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%BeginResource: font UVLFCH+Symbol
%!FontType1-1.0: UVLFCH+Symbol
12 dict begin
/FontInfo 10 dict dup begin
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /UVLFCH+Symbol def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [35 -177 550 705] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 100 /delta put
dup 182 /partialdiff put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF5
CF24FE2E5E340458AD0CDB2F28D2E096BFF2441162F66EA766418A66F8A9BA3B
7D7FA499922624BF28A555A3C2FC9B7C77176F92B6353BC392E5D3B7815DE71B
C0AA9EB02036B9C7041DFD0F410B6BA95B43F28D20B08DEA1708AD39D9E97994
BB59FC51B6E03B69E280D8A6348CB1CBE9C23E958F5277A724B3C945A56EEFF1
D4E1F8D64F758553406F11D183EF845E046390FF5A0D8132CCE94B346CC41A18
1F944EAB059533375157D307B86809EE2F2E671C555433D890F7616790D5A308
F9D27E2069C9643CEBBE41AC00088DCCC8A1C7ACA7F6A6474E46D330806CC268
8F5017B21D632DF224F4BBCDC8FE841B09515087FE70C756CA74DE20B612713F
73B5C36764332052501D15FF5385AB1315D6F3BD04C0596CA1DB7F22C29D2547
65164BAFE4CFD6554FD23F913E593670B0EA1248C704E1F9D31DB826FC5F9829
B0BF1E671C02FB6605C4652397B372972FED43F5099506741C5A34D0799DA186
56B2B45B347678898DF4BEC131177FEC75AE718D633536A882D27FD3A2DE399A
83CA40F1AE852262E15D721F1BDA8AB8DD276754DD6A74AA36D2D1E898FDC8BF
9FDD44BB13D85527228E64074AC40F87270E0DA05E13C6001E7D7A3737A5008D
D77F30C1C9772D50BFC3D5FFE6DDFFE66F6EB673E007DEDBC52DB275B2AD1C2E
6958C036C779ED7F39B90BC6BB4E86E795780766CC8F1EB41A32F68074BCAD4F
8556173DEE0537587D96AC3A71D98E1D30E8099B81FEE385B1745471D7D4EC94
64C1989CA95BD2F1C14845443F66AC66E2CC5D788CB0125DC66092D7D94BF7A4
0C06B0BF7F6682AD6729CBF6A433FCA034E7EA9F31F966CDD3A7C20906E1A5DD
ECC9C723810F7E55A885C7321D5BACFAA3F3CDD06C9BD5CD2E04E5837DC958B8
08B0C8B0281E17C1149A817A9F6C7A223B81C57C6E5CD0CED5F6EE42F3B47BC5
B9DE9F1517BF3B32A22DE23FAB31341D9B8F55040572476437F5A81BD297A6FF
D971B963458CF4779AE811F0CC4AD74B3CFD7A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F19_0 /UVLFCH+Symbol 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/delta/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/partialdiff/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[1 0 0 1 0 1] cm
q
[1 0 0 1 0 0] cm
0 0 612 792 re
W
q
[0.1 0 0 0.1 0 0] cm
q
1175.67 134.355 m
1175.33 134.355 l
1670.33 134.355 2034.08 85.6133 2210.33 40.6133 c
2210.33 145.145 l
2034.08 190.145 1670.33 238.895 1175.33 238.895 c
1175.67 238.895 l
1175.67 134.355 l
W
/DeviceCMYK {} cs
[0 0 0 0] sc
1175.67 134.355 m
1175.33 134.355 l
1670.33 134.355 2034.08 85.6133 2210.33 40.6133 c
2210.33 145.145 l
2034.08 190.145 1670.33 238.895 1175.33 238.895 c
1175.67 238.895 l
1175.67 134.355 l
f
q
1175.67 134.355 m
1175.33 134.355 l
1670.33 134.355 2034.08 85.6133 2210.33 40.6133 c
2210.33 145.145 l
2034.08 190.145 1670.33 238.895 1175.33 238.895 c
1175.67 238.895 l
1175.67 134.355 l
W
/DeviceCMYK {} cs
[-1076.27 975.02 603.133 665.761 1748.51 -516.768] cm
/t0 0 def
/t1 1 def
/dt 1 def
/x0 0 def
/y0 0 def
/dx 1 def
/x1 1 def
/y1 0 def
/dy 0 def
/xMin 0.022 def
/yMin 0.0315 def
/xMax 0.6419 def
/yMax 0.9686 def
/n 4 def
/func /xpdfSamples1 [
0
0
0
0
0
0
0
0
] def
{ 2 array 1 array 3 2 roll
0 sub 1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup floor cvi exch dup ceiling cvi exch 2 index sub
3 index 0 3 2 roll put
3 index 1 3 2 roll put
2 index 0 3 2 roll put
xpdfSamples1
2 index 0 get
4 mul 0 add get
xpdfSamples1
3 index 1 get
4 mul 0 add get
2 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples1
3 index 0 get
4 mul 1 add get
xpdfSamples1
4 index 1 get
4 mul 1 add get
3 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples1
4 index 0 get
4 mul 2 add get
xpdfSamples1
5 index 1 get
4 mul 2 add get
4 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples1
5 index 0 get
4 mul 3 add get
xpdfSamples1
6 index 1 get
4 mul 3 add get
5 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
6 4 roll pop pop }
/xpdfFunc0_0 exch def
/xpdfSamples2 [
0
0
0
0
0
0
0
0.0039
0
0
0
0.0078
0
0
0
0.0118
0
0
0
0.0157
0
0
0
0.0196
0
0
0
0.0235
0
0
0
0.0275
0
0
0
0.0314
0
0
0
0.0353
0
0
0
0.0392
0
0
0
0.0431
0
0
0
0.0471
0
0
0
0.051
0
0
0
0.0549
0
0
0
0.0588
0
0
0
0.0627
0
0
0
0.0667
0
0
0
0.0706
0
0
0
0.0745
0
0
0
0.0784
0
0
0
0.0824
0
0
0
0.0863
0
0
0
0.0902
0
0
0
0.0941
0
0
0
0.098
0
0
0
0.102
0
0
0
0.1059
0
0
0
0.1098
0
0
0
0.1137
0
0
0
0.1176
0
0
0
0.1216
0
0
0
0.1255
0
0
0
0.1294
0
0
0
0.1333
0
0
0
0.1373
0
0
0
0.1412
0
0
0
0.1451
0
0
0
0.149
0
0
0
0.1529
0
0
0
0.1569
0
0
0
0.1608
0
0
0
0.1647
0
0
0
0.1686
0
0
0
0.1725
0
0
0
0.1765
0
0
0
0.1804
0
0
0
0.1843
0
0
0
0.1882
0
0
0
0.1922
0
0
0
0.1961
0
0
0
0.2
0
0
0
0.2039
0
0
0
0.2078
0
0
0
0.2118
0
0
0
0.2157
0
0
0
0.2196
0
0
0
0.2235
0
0
0
0.2275
0
0
0
0.2314
0
0
0
0.2353
0
0
0
0.2392
0
0
0
0.2431
0
0
0
0.2471
0
0
0
0.251
0
0
0
0.2549
0
0
0
0.2588
0
0
0
0.2627
0
0
0
0.2667
0
0
0
0.2706
0
0
0
0.2745
0
0
0
0.2784
0
0
0
0.2824
0
0
0
0.2863
0
0
0
0.2902
0
0
0
0.2941
0
0
0
0.298
0
0
0
0.302
0
0
0
0.3059
0
0
0
0.3098
0
0
0
0.3137
0
0
0
0.3176
0
0
0
0.3216
0
0
0
0.3255
0
0
0
0.3294
0
0
0
0.3333
0
0
0
0.3373
0
0
0
0.3412
0
0
0
0.3451
0
0
0
0.349
0
0
0
0.3529
0
0
0
0.3569
0
0
0
0.3608
0
0
0
0.3647
0
0
0
0.3686
0
0
0
0.3725
0
0
0
0.3765
0
0
0
0.3804
0
0
0
0.3843
0
0
0
0.3882
0
0
0
0.3922
0
0
0
0.3961
0
0
0
0.4
0
0
0
0.4039
0
0
0
0.4078
0
0
0
0.4118
0
0
0
0.4157
0
0
0
0.4196
0
0
0
0.4235
0
0
0
0.4275
0
0
0
0.4314
0
0
0
0.4353
0
0
0
0.4392
0
0
0
0.4431
0
0
0
0.4471
0
0
0
0.451
0
0
0
0.4549
0
0
0
0.4588
0
0
0
0.4627
0
0
0
0.4667
0
0
0
0.4706
0
0
0
0.4745
0
0
0
0.4784
0
0
0
0.4824
0
0
0
0.4863
0
0
0
0.4902
0
0
0
0.4941
0
0
0
0.498
0
0
0
0.502
0
0
0
0.5059
0
0
0
0.5098
0
0
0
0.5137
0
0
0
0.5176
0
0
0
0.5216
0
0
0
0.5255
0
0
0
0.5294
0
0
0
0.5333
0
0
0
0.5373
0
0
0
0.5412
0
0
0
0.5451
0
0
0
0.549
0
0
0
0.5529
0
0
0
0.5569
0
0
0
0.5608
0
0
0
0.5647
0
0
0
0.5686
0
0
0
0.5725
0
0
0
0.5765
0
0
0
0.5804
0
0
0
0.5843
0
0
0
0.5882
0
0
0
0.5922
0
0
0
0.5961
0
0
0
0.6
0
0
0
0.6039
0
0
0
0.6078
0
0
0
0.6118
0
0
0
0.6157
0
0
0
0.6196
0
0
0
0.6235
0
0
0
0.6275
0
0
0
0.6314
0
0
0
0.6353
0
0
0
0.6392
0
0
0
0.6431
0
0
0
0.6431
0
0
0
0.6471
0
0
0
0.651
0
0
0
0.6549
0
0
0
0.6588
0
0
0
0.6627
0
0
0
0.6667
0
0
0
0.6706
0
0
0
0.6745
0
0
0
0.6784
0
0
0
0.6824
0
0
0
0.6863
0
0
0
0.6902
0
0
0
0.6941
0
0
0
0.698
0
0
0
0.702
0
0
0
0.7059
0
0
0
0.7098
0
0
0
0.7137
0
0
0
0.7176
0
0
0
0.7216
0
0
0
0.7255
0
0
0
0.7294
0
0
0
0.7333
0
0
0
0.7373
0
0
0
0.7412
0
0
0
0.7451
0
0
0
0.749
0
0
0
0.7529
0
0
0
0.7569
0
0
0
0.7608
0
0
0
0.7647
0
0
0
0.7686
0
0
0
0.7725
0
0
0
0.7765
0
0
0
0.7804
0
0
0
0.7843
0
0
0
0.7882
0
0
0
0.7922
0
0
0
0.7961
0
0
0
0.8
0
0
0
0.8039
0
0
0
0.8078
0
0
0
0.8118
0
0
0
0.8157
0
0
0
0.8196
0
0
0
0.8235
0
0
0
0.8275
0
0
0
0.8314
0
0
0
0.8353
0
0
0
0.8392
0
0
0
0.8431
0
0
0
0.8471
0
0
0
0.851
0
0
0
0.8549
0
0
0
0.8588
0
0
0
0.8627
0
0
0
0.8667
0
0
0
0.8706
0
0
0
0.8745
0
0
0
0.8784
0
0
0
0.8824
0
0
0
0.8863
0
0
0
0.8902
0
0
0
0.8941
0
0
0
0.898
0
0
0
0.902
0
0
0
0.9059
0
0
0
0.9098
0
0
0
0.9137
0
0
0
0.9176
0
0
0
0.9216
0
0
0
0.9255
0
0
0
0.9294
0
0
0
0.9333
0
0
0
0.9373
0
0
0
0.9373
0
0
0
0.9412
0
0
0
0.9451
0
0
0
0.949
0
0
0
0.9529
0
0
0
0.9569
0
0
0
0.9608
0
0
0
0.9647
0
0
0
0.9686
0
0
0
0.9725
0
0
0
0.9765
0
0
0
0.9804
0
0
0
0.9843
0
0
0
0.9882
0
0
0
0.9922
0
0
0
0.9961
0
0
0
1
] def
{ 2 array 1 array 3 2 roll
0 sub 257 mul 0 add
dup 0 lt { pop 0 } { dup 257 gt { pop 257 } if } ifelse
dup floor cvi exch dup ceiling cvi exch 2 index sub
3 index 0 3 2 roll put
3 index 1 3 2 roll put
2 index 0 3 2 roll put
xpdfSamples2
2 index 0 get
4 mul 0 add get
xpdfSamples2
3 index 1 get
4 mul 0 add get
2 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples2
3 index 0 get
4 mul 1 add get
xpdfSamples2
4 index 1 get
4 mul 1 add get
3 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples2
4 index 0 get
4 mul 2 add get
xpdfSamples2
5 index 1 get
4 mul 2 add get
4 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples2
5 index 0 get
4 mul 3 add get
xpdfSamples2
6 index 1 get
4 mul 3 add get
5 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
6 4 roll pop pop }
/xpdfFunc0_1 exch def
/xpdfSamples3 [
0
0
0
1
0
0
0
1
] def
{ 2 array 1 array 3 2 roll
0 sub 1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup floor cvi exch dup ceiling cvi exch 2 index sub
3 index 0 3 2 roll put
3 index 1 3 2 roll put
2 index 0 3 2 roll put
xpdfSamples3
2 index 0 get
4 mul 0 add get
xpdfSamples3
3 index 1 get
4 mul 0 add get
2 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples3
3 index 0 get
4 mul 1 add get
xpdfSamples3
4 index 1 get
4 mul 1 add get
3 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples3
4 index 0 get
4 mul 2 add get
xpdfSamples3
5 index 1 get
4 mul 2 add get
4 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples3
5 index 0 get
4 mul 3 add get
xpdfSamples3
6 index 1 get
4 mul 3 add get
5 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
6 4 roll pop pop }
/xpdfFunc0_2 exch def
/xpdfSamples4 [
0
0
0
1
0
0
0
1
] def
{ 2 array 1 array 3 2 roll
0 sub 1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup floor cvi exch dup ceiling cvi exch 2 index sub
3 index 0 3 2 roll put
3 index 1 3 2 roll put
2 index 0 3 2 roll put
xpdfSamples4
2 index 0 get
4 mul 0 add get
xpdfSamples4
3 index 1 get
4 mul 0 add get
2 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples4
3 index 0 get
4 mul 1 add get
xpdfSamples4
4 index 1 get
4 mul 1 add get
3 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples4
4 index 0 get
4 mul 2 add get
xpdfSamples4
5 index 1 get
4 mul 2 add get
4 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples4
5 index 0 get
4 mul 3 add get
xpdfSamples4
6 index 1 get
4 mul 3 add get
5 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
6 4 roll pop pop }
/xpdfFunc0_3 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup 0.0113 lt { 0 sub 88.5034 mul 0 add xpdfFunc0_0 } {
dup 0.9887 lt { 0.0113 sub 1.0231 mul 0 add xpdfFunc0_1 } {
dup 0.9944 lt { 0.9887 sub 177.0538 mul 0 add xpdfFunc0_2 } {
0.9944 sub 176.9912 mul 0 add xpdfFunc0_3
} ifelse
} ifelse
} ifelse
}
def
0.022 0.6419 0 axialSH
Q
Q
q
1034.66 240.305 m
1035 240.305 l
540 240.305 176.25 191.555 0 146.555 c
0 42.0234 l
176.25 87.0234 540 135.773 1035 135.773 c
1034.66 135.773 l
W
/DeviceCMYK {} cs
[0 0 0 1] sc
1034.66 240.305 m
1035 240.305 l
540 240.305 176.25 191.555 0 146.555 c
0 42.0234 l
176.25 87.0234 540 135.773 1035 135.773 c
1034.66 135.773 l
f
q
1034.66 240.305 m
1035 240.305 l
540 240.305 176.25 191.555 0 146.555 c
0 42.0234 l
176.25 87.0234 540 135.773 1035 135.773 c
1034.66 135.773 l
W
/DeviceCMYK {} cs
[-937.486 -1053.75 -718.382 639.124 1409.1 420.022] cm
/t0 0 def
/t1 1 def
/dt 1 def
/x0 0 def
/y0 0 def
/dx 1 def
/x1 1 def
/y1 0 def
/dy 0 def
/xMin 0.2715 def
/yMin 0.0294 def
/xMax 0.8643 def
/yMax 0.9706 def
/n 4 def
/func /xpdfSamples6 [
0
0
0
1
0
0
0
1
] def
{ 2 array 1 array 3 2 roll
0 sub 1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup floor cvi exch dup ceiling cvi exch 2 index sub
3 index 0 3 2 roll put
3 index 1 3 2 roll put
2 index 0 3 2 roll put
xpdfSamples6
2 index 0 get
4 mul 0 add get
xpdfSamples6
3 index 1 get
4 mul 0 add get
2 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples6
3 index 0 get
4 mul 1 add get
xpdfSamples6
4 index 1 get
4 mul 1 add get
3 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples6
4 index 0 get
4 mul 2 add get
xpdfSamples6
5 index 1 get
4 mul 2 add get
4 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples6
5 index 0 get
4 mul 3 add get
xpdfSamples6
6 index 1 get
4 mul 3 add get
5 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
6 4 roll pop pop }
/xpdfFunc5_0 exch def
/xpdfSamples7 [
0
0
0
1
0
0
0
1
] def
{ 2 array 1 array 3 2 roll
0 sub 1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup floor cvi exch dup ceiling cvi exch 2 index sub
3 index 0 3 2 roll put
3 index 1 3 2 roll put
2 index 0 3 2 roll put
xpdfSamples7
2 index 0 get
4 mul 0 add get
xpdfSamples7
3 index 1 get
4 mul 0 add get
2 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples7
3 index 0 get
4 mul 1 add get
xpdfSamples7
4 index 1 get
4 mul 1 add get
3 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples7
4 index 0 get
4 mul 2 add get
xpdfSamples7
5 index 1 get
4 mul 2 add get
4 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples7
5 index 0 get
4 mul 3 add get
xpdfSamples7
6 index 1 get
4 mul 3 add get
5 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
6 4 roll pop pop }
/xpdfFunc5_1 exch def
/xpdfSamples8 [
0
0
0
1
0
0
0
0.9961
0
0
0
0.9922
0
0
0
0.9882
0
0
0
0.9843
0
0
0
0.9804
0
0
0
0.9765
0
0
0
0.9725
0
0
0
0.9686
0
0
0
0.9647
0
0
0
0.9608
0
0
0
0.9569
0
0
0
0.9529
0
0
0
0.949
0
0
0
0.9451
0
0
0
0.9412
0
0
0
0.9373
0
0
0
0.9333
0
0
0
0.9294
0
0
0
0.9255
0
0
0
0.9216
0
0
0
0.9176
0
0
0
0.9137
0
0
0
0.9098
0
0
0
0.9059
0
0
0
0.902
0
0
0
0.898
0
0
0
0.8941
0
0
0
0.8902
0
0
0
0.8863
0
0
0
0.8824
0
0
0
0.8784
0
0
0
0.8784
0
0
0
0.8745
0
0
0
0.8706
0
0
0
0.8667
0
0
0
0.8627
0
0
0
0.8588
0
0
0
0.8549
0
0
0
0.851
0
0
0
0.8471
0
0
0
0.8431
0
0
0
0.8392
0
0
0
0.8353
0
0
0
0.8314
0
0
0
0.8275
0
0
0
0.8235
0
0
0
0.8196
0
0
0
0.8157
0
0
0
0.8118
0
0
0
0.8078
0
0
0
0.8039
0
0
0
0.8
0
0
0
0.7961
0
0
0
0.7922
0
0
0
0.7922
0
0
0
0.7882
0
0
0
0.7843
0
0
0
0.7804
0
0
0
0.7765
0
0
0
0.7725
0
0
0
0.7686
0
0
0
0.7647
0
0
0
0.7608
0
0
0
0.7569
0
0
0
0.7529
0
0
0
0.749
0
0
0
0.7451
0
0
0
0.7412
0
0
0
0.7373
0
0
0
0.7333
0
0
0
0.7333
0
0
0
0.7294
0
0
0
0.7255
0
0
0
0.7216
0
0
0
0.7176
0
0
0
0.7137
0
0
0
0.7098
0
0
0
0.7059
0
0
0
0.702
0
0
0
0.698
0
0
0
0.6941
0
0
0
0.6902
0
0
0
0.6902
0
0
0
0.6863
0
0
0
0.6824
0
0
0
0.6784
0
0
0
0.6745
0
0
0
0.6706
0
0
0
0.6667
0
0
0
0.6627
0
0
0
0.6588
0
0
0
0.6549
0
0
0
0.651
0
0
0
0.651
0
0
0
0.6471
0
0
0
0.6431
0
0
0
0.6392
0
0
0
0.6353
0
0
0
0.6314
0
0
0
0.6275
0
0
0
0.6235
0
0
0
0.6196
0
0
0
0.6157
0
0
0
0.6157
0
0
0
0.6118
0
0
0
0.6078
0
0
0
0.6039
0
0
0
0.6
0
0
0
0.5961
0
0
0
0.5922
0
0
0
0.5882
0
0
0
0.5882
0
0
0
0.5843
0
0
0
0.5804
0
0
0
0.5765
0
0
0
0.5725
0
0
0
0.5686
0
0
0
0.5647
0
0
0
0.5608
0
0
0
0.5608
0
0
0
0.5569
0
0
0
0.5529
0
0
0
0.549
0
0
0
0.5451
0
0
0
0.5412
0
0
0
0.5373
0
0
0
0.5333
0
0
0
0.5333
0
0
0
0.5294
0
0
0
0.5255
0
0
0
0.5216
0
0
0
0.5176
0
0
0
0.5137
0
0
0
0.5098
0
0
0
0.5098
0
0
0
0.5059
0
0
0
0.502
0
0
0
0.498
0
0
0
0.4941
0
0
0
0.4902
0
0
0
0.4902
0
0
0
0.4863
0
0
0
0.4824
0
0
0
0.4784
0
0
0
0.4745
0
0
0
0.4706
0
0
0
0.4706
0
0
0
0.4667
0
0
0
0.4627
0
0
0
0.4588
0
0
0
0.4549
0
0
0
0.451
0
0
0
0.451
0
0
0
0.4471
0
0
0
0.4431
0
0
0
0.4392
0
0
0
0.4353
0
0
0
0.4314
0
0
0
0.4314
0
0
0
0.4275
0
0
0
0.4235
0
0
0
0.4196
0
0
0
0.4157
0
0
0
0.4157
0
0
0
0.4118
0
0
0
0.4078
0
0
0
0.4039
0
0
0
0.4
0
0
0
0.4
0
0
0
0.3961
0
0
0
0.3922
0
0
0
0.3882
0
0
0
0.3843
0
0
0
0.3843
0
0
0
0.3804
0
0
0
0.3765
0
0
0
0.3725
0
0
0
0.3686
0
0
0
0.3686
0
0
0
0.3647
0
0
0
0.3608
0
0
0
0.3569
0
0
0
0.3529
0
0
0
0.3529
0
0
0
0.349
0
0
0
0.3451
0
0
0
0.3412
0
0
0
0.3412
0
0
0
0.3373
0
0
0
0.3333
0
0
0
0.3294
0
0
0
0.3255
0
0
0
0.3255
0
0
0
0.3216
0
0
0
0.3176
0
0
0
0.3137
0
0
0
0.3137
0
0
0
0.3098
0
0
0
0.3059
0
0
0
0.302
0
0
0
0.302
0
0
0
0.298
0
0
0
0.2941
0
0
0
0.2902
0
0
0
0.2902
0
0
0
0.2863
0
0
0
0.2824
0
0
0
0.2784
0
0
0
0.2784
0
0
0
0.2745
0
0
0
0.2706
0
0
0
0.2667
0
0
0
0.2667
0
0
0
0.2627
0
0
0
0.2588
0
0
0
0.2588
0
0
0
0.2549
0
0
0
0.251
0
0
0
0.2471
0
0
0
0.2471
0
0
0
0.2431
0
0
0
0.2392
0
0
0
0.2392
0
0
0
0.2353
0
0
0
0.2314
0
0
0
0.2275
0
0
0
0.2275
0
0
0
0.2235
0
0
0
0.2196
0
0
0
0.2196
0
0
0
0.2157
0
0
0
0.2118
0
0
0
0.2118
0
0
0
0.2078
0
0
0
0.2039
0
0
0
0.2039
0
0
0
0.2
0
0
0
0.1961
0
0
0
0.1922
0
0
0
0.1922
0
0
0
0.1882
0
0
0
0.1843
0
0
0
0.1843
0
0
0
0.1804
0
0
0
0.1765
0
0
0
0.1765
0
0
0
0.1725
0
0
0
0.1686
0
0
0
0.1686
0
0
0
0.1647
0
0
0
0.1647
0
0
0
0.1608
0
0
0
0.1569
0
0
0
0.1569
0
0
0
0.1529
0
0
0
0.149
0
0
0
0.149
0
0
0
0.1451
0
0
0
0.1412
0
0
0
0.1412
0
0
0
0.1373
0
0
0
0.1373
0
0
0
0.1333
0
0
0
0.1294
0
0
0
0.1294
0
0
0
0.1255
0
0
0
0.1216
0
0
0
0.1216
0
0
0
0.1176
0
0
0
0.1176
0
0
0
0.1137
0
0
0
0.1098
0
0
0
0.1098
0
0
0
0.1059
0
0
0
0.1059
0
0
0
0.102
0
0
0
0.102
0
0
0
0.098
0
0
0
0.0941
0
0
0
0.0941
0
0
0
0.0902
0
0
0
0.0902
0
0
0
0.0863
0
0
0
0.0863
0
0
0
0.0824
0
0
0
0.0784
0
0
0
0.0784
0
0
0
0.0745
0
0
0
0.0745
0
0
0
0.0706
0
0
0
0.0706
0
0
0
0.0667
0
0
0
0.0667
0
0
0
0.0627
0
0
0
0.0627
0
0
0
0.0588
0
0
0
0.0588
0
0
0
0.0549
0
0
0
0.0549
0
0
0
0.051
0
0
0
0.051
0
0
0
0.0471
0
0
0
0.0471
0
0
0
0.0431
0
0
0
0.0431
0
0
0
0.0392
0
0
0
0.0392
0
0
0
0.0353
0
0
0
0.0353
0
0
0
0.0314
0
0
0
0.0314
0
0
0
0.0314
0
0
0
0.0275
0
0
0
0.0275
0
0
0
0.0235
0
0
0
0.0235
0
0
0
0.0235
0
0
0
0.0196
0
0
0
0.0196
0
0
0
0.0157
0
0
0
0.0157
0
0
0
0.0157
0
0
0
0.0118
0
0
0
0.0118
0
0
0
0.0118
0
0
0
0.0078
0
0
0
0.0078
0
0
0
0.0078
0
0
0
0.0039
0
0
0
0.0039
0
0
0
0.0039
0
0
0
0.0039
0
0
0
0
0
0
0
0
0
0
0
0
] def
{ 2 array 1 array 3 2 roll
0 sub 335 mul 0 add
dup 0 lt { pop 0 } { dup 335 gt { pop 335 } if } ifelse
dup floor cvi exch dup ceiling cvi exch 2 index sub
3 index 0 3 2 roll put
3 index 1 3 2 roll put
2 index 0 3 2 roll put
xpdfSamples8
2 index 0 get
4 mul 0 add get
xpdfSamples8
3 index 1 get
4 mul 0 add get
2 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples8
3 index 0 get
4 mul 1 add get
xpdfSamples8
4 index 1 get
4 mul 1 add get
3 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples8
4 index 0 get
4 mul 2 add get
xpdfSamples8
5 index 1 get
4 mul 2 add get
4 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples8
5 index 0 get
4 mul 3 add get
xpdfSamples8
6 index 1 get
4 mul 3 add get
5 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
6 4 roll pop pop }
/xpdfFunc5_2 exch def
/xpdfSamples9 [
0
0
0
0
0
0
0
0
] def
{ 2 array 1 array 3 2 roll
0 sub 1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup floor cvi exch dup ceiling cvi exch 2 index sub
3 index 0 3 2 roll put
3 index 1 3 2 roll put
2 index 0 3 2 roll put
xpdfSamples9
2 index 0 get
4 mul 0 add get
xpdfSamples9
3 index 1 get
4 mul 0 add get
2 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples9
3 index 0 get
4 mul 1 add get
xpdfSamples9
4 index 1 get
4 mul 1 add get
3 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples9
4 index 0 get
4 mul 2 add get
xpdfSamples9
5 index 1 get
4 mul 2 add get
4 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples9
5 index 0 get
4 mul 3 add get
xpdfSamples9
6 index 1 get
4 mul 3 add get
5 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
6 4 roll pop pop }
/xpdfFunc5_3 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup 0.0113 lt { 0 sub 88.5034 mul 0 add xpdfFunc5_0 } {
dup 0.0113 lt { 0.0113 sub 0 mul 0 add xpdfFunc5_1 } {
dup 0.9887 lt { 0.0113 sub 1.0231 mul 0 add xpdfFunc5_2 } {
0.9887 sub 88.5112 mul 0 add xpdfFunc5_3
} ifelse
} ifelse
} ifelse
}
def
0.2715 0.8643 0 axialSH
Q
Q
q
0 0.7734 3325.06 650 re
W
/DeviceCMYK {} cs
[0 0 0 0] sc
1176.58 452.953 m
1176.58 134.062 l
1282.99 238.438 l
1282.99 557.328 l
f
Q
q
1160.82 452.484 m
1160.47 452.484 l
1655.47 452.484 2019.23 501.234 2195.48 546.234 c
2195.48 650.773 l
2019.23 605.773 1655.47 557.023 1160.47 557.023 c
1160.82 557.023 l
W
/DeviceCMYK {} cs
[0 0 0 1] sc
1160.82 452.484 m
1160.47 452.484 l
1655.47 452.484 2019.23 501.234 2195.48 546.234 c
2195.48 650.773 l
2019.23 605.773 1655.47 557.023 1160.47 557.023 c
1160.82 557.023 l
f
q
1160.82 452.484 m
1160.47 452.484 l
1655.47 452.484 2019.23 501.234 2195.48 546.234 c
2195.48 650.773 l
2019.23 605.773 1655.47 557.023 1160.47 557.023 c
1160.82 557.023 l
W
/DeviceCMYK {} cs
[937.494 1053.76 718.387 -639.129 786.373 272.764] cm
/t0 0 def
/t1 1 def
/dt 1 def
/x0 0 def
/y0 0 def
/dx 1 def
/x1 1 def
/y1 0 def
/dy 0 def
/xMin 0.2715 def
/yMin 0.0294 def
/xMax 0.8643 def
/yMax 0.9706 def
/n 4 def
/func /xpdfSamples11 [
0
0
0
1
0
0
0
1
] def
{ 2 array 1 array 3 2 roll
0 sub 1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup floor cvi exch dup ceiling cvi exch 2 index sub
3 index 0 3 2 roll put
3 index 1 3 2 roll put
2 index 0 3 2 roll put
xpdfSamples11
2 index 0 get
4 mul 0 add get
xpdfSamples11
3 index 1 get
4 mul 0 add get
2 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples11
3 index 0 get
4 mul 1 add get
xpdfSamples11
4 index 1 get
4 mul 1 add get
3 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples11
4 index 0 get
4 mul 2 add get
xpdfSamples11
5 index 1 get
4 mul 2 add get
4 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples11
5 index 0 get
4 mul 3 add get
xpdfSamples11
6 index 1 get
4 mul 3 add get
5 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
6 4 roll pop pop }
/xpdfFunc10_0 exch def
/xpdfSamples12 [
0
0
0
1
0
0
0
1
] def
{ 2 array 1 array 3 2 roll
0 sub 1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup floor cvi exch dup ceiling cvi exch 2 index sub
3 index 0 3 2 roll put
3 index 1 3 2 roll put
2 index 0 3 2 roll put
xpdfSamples12
2 index 0 get
4 mul 0 add get
xpdfSamples12
3 index 1 get
4 mul 0 add get
2 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples12
3 index 0 get
4 mul 1 add get
xpdfSamples12
4 index 1 get
4 mul 1 add get
3 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples12
4 index 0 get
4 mul 2 add get
xpdfSamples12
5 index 1 get
4 mul 2 add get
4 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples12
5 index 0 get
4 mul 3 add get
xpdfSamples12
6 index 1 get
4 mul 3 add get
5 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
6 4 roll pop pop }
/xpdfFunc10_1 exch def
/xpdfSamples13 [
0
0
0
1
0
0
0
0.9961
0
0
0
0.9922
0
0
0
0.9882
0
0
0
0.9843
0
0
0
0.9804
0
0
0
0.9765
0
0
0
0.9725
0
0
0
0.9686
0
0
0
0.9647
0
0
0
0.9608
0
0
0
0.9569
0
0
0
0.9529
0
0
0
0.949
0
0
0
0.9451
0
0
0
0.9412
0
0
0
0.9373
0
0
0
0.9333
0
0
0
0.9294
0
0
0
0.9255
0
0
0
0.9216
0
0
0
0.9176
0
0
0
0.9137
0
0
0
0.9098
0
0
0
0.9059
0
0
0
0.902
0
0
0
0.898
0
0
0
0.8941
0
0
0
0.8902
0
0
0
0.8863
0
0
0
0.8824
0
0
0
0.8784
0
0
0
0.8784
0
0
0
0.8745
0
0
0
0.8706
0
0
0
0.8667
0
0
0
0.8627
0
0
0
0.8588
0
0
0
0.8549
0
0
0
0.851
0
0
0
0.8471
0
0
0
0.8431
0
0
0
0.8392
0
0
0
0.8353
0
0
0
0.8314
0
0
0
0.8275
0
0
0
0.8235
0
0
0
0.8196
0
0
0
0.8157
0
0
0
0.8118
0
0
0
0.8078
0
0
0
0.8039
0
0
0
0.8
0
0
0
0.7961
0
0
0
0.7922
0
0
0
0.7922
0
0
0
0.7882
0
0
0
0.7843
0
0
0
0.7804
0
0
0
0.7765
0
0
0
0.7725
0
0
0
0.7686
0
0
0
0.7647
0
0
0
0.7608
0
0
0
0.7569
0
0
0
0.7529
0
0
0
0.749
0
0
0
0.7451
0
0
0
0.7412
0
0
0
0.7373
0
0
0
0.7333
0
0
0
0.7333
0
0
0
0.7294
0
0
0
0.7255
0
0
0
0.7216
0
0
0
0.7176
0
0
0
0.7137
0
0
0
0.7098
0
0
0
0.7059
0
0
0
0.702
0
0
0
0.698
0
0
0
0.6941
0
0
0
0.6902
0
0
0
0.6902
0
0
0
0.6863
0
0
0
0.6824
0
0
0
0.6784
0
0
0
0.6745
0
0
0
0.6706
0
0
0
0.6667
0
0
0
0.6627
0
0
0
0.6588
0
0
0
0.6549
0
0
0
0.651
0
0
0
0.651
0
0
0
0.6471
0
0
0
0.6431
0
0
0
0.6392
0
0
0
0.6353
0
0
0
0.6314
0
0
0
0.6275
0
0
0
0.6235
0
0
0
0.6196
0
0
0
0.6157
0
0
0
0.6157
0
0
0
0.6118
0
0
0
0.6078
0
0
0
0.6039
0
0
0
0.6
0
0
0
0.5961
0
0
0
0.5922
0
0
0
0.5882
0
0
0
0.5882
0
0
0
0.5843
0
0
0
0.5804
0
0
0
0.5765
0
0
0
0.5725
0
0
0
0.5686
0
0
0
0.5647
0
0
0
0.5608
0
0
0
0.5608
0
0
0
0.5569
0
0
0
0.5529
0
0
0
0.549
0
0
0
0.5451
0
0
0
0.5412
0
0
0
0.5373
0
0
0
0.5333
0
0
0
0.5333
0
0
0
0.5294
0
0
0
0.5255
0
0
0
0.5216
0
0
0
0.5176
0
0
0
0.5137
0
0
0
0.5098
0
0
0
0.5098
0
0
0
0.5059
0
0
0
0.502
0
0
0
0.498
0
0
0
0.4941
0
0
0
0.4902
0
0
0
0.4902
0
0
0
0.4863
0
0
0
0.4824
0
0
0
0.4784
0
0
0
0.4745
0
0
0
0.4706
0
0
0
0.4706
0
0
0
0.4667
0
0
0
0.4627
0
0
0
0.4588
0
0
0
0.4549
0
0
0
0.451
0
0
0
0.451
0
0
0
0.4471
0
0
0
0.4431
0
0
0
0.4392
0
0
0
0.4353
0
0
0
0.4314
0
0
0
0.4314
0
0
0
0.4275
0
0
0
0.4235
0
0
0
0.4196
0
0
0
0.4157
0
0
0
0.4157
0
0
0
0.4118
0
0
0
0.4078
0
0
0
0.4039
0
0
0
0.4
0
0
0
0.4
0
0
0
0.3961
0
0
0
0.3922
0
0
0
0.3882
0
0
0
0.3843
0
0
0
0.3843
0
0
0
0.3804
0
0
0
0.3765
0
0
0
0.3725
0
0
0
0.3686
0
0
0
0.3686
0
0
0
0.3647
0
0
0
0.3608
0
0
0
0.3569
0
0
0
0.3529
0
0
0
0.3529
0
0
0
0.349
0
0
0
0.3451
0
0
0
0.3412
0
0
0
0.3412
0
0
0
0.3373
0
0
0
0.3333
0
0
0
0.3294
0
0
0
0.3255
0
0
0
0.3255
0
0
0
0.3216
0
0
0
0.3176
0
0
0
0.3137
0
0
0
0.3137
0
0
0
0.3098
0
0
0
0.3059
0
0
0
0.302
0
0
0
0.302
0
0
0
0.298
0
0
0
0.2941
0
0
0
0.2902
0
0
0
0.2902
0
0
0
0.2863
0
0
0
0.2824
0
0
0
0.2784
0
0
0
0.2784
0
0
0
0.2745
0
0
0
0.2706
0
0
0
0.2667
0
0
0
0.2667
0
0
0
0.2627
0
0
0
0.2588
0
0
0
0.2588
0
0
0
0.2549
0
0
0
0.251
0
0
0
0.2471
0
0
0
0.2471
0
0
0
0.2431
0
0
0
0.2392
0
0
0
0.2392
0
0
0
0.2353
0
0
0
0.2314
0
0
0
0.2275
0
0
0
0.2275
0
0
0
0.2235
0
0
0
0.2196
0
0
0
0.2196
0
0
0
0.2157
0
0
0
0.2118
0
0
0
0.2118
0
0
0
0.2078
0
0
0
0.2039
0
0
0
0.2039
0
0
0
0.2
0
0
0
0.1961
0
0
0
0.1922
0
0
0
0.1922
0
0
0
0.1882
0
0
0
0.1843
0
0
0
0.1843
0
0
0
0.1804
0
0
0
0.1765
0
0
0
0.1765
0
0
0
0.1725
0
0
0
0.1686
0
0
0
0.1686
0
0
0
0.1647
0
0
0
0.1647
0
0
0
0.1608
0
0
0
0.1569
0
0
0
0.1569
0
0
0
0.1529
0
0
0
0.149
0
0
0
0.149
0
0
0
0.1451
0
0
0
0.1412
0
0
0
0.1412
0
0
0
0.1373
0
0
0
0.1373
0
0
0
0.1333
0
0
0
0.1294
0
0
0
0.1294
0
0
0
0.1255
0
0
0
0.1216
0
0
0
0.1216
0
0
0
0.1176
0
0
0
0.1176
0
0
0
0.1137
0
0
0
0.1098
0
0
0
0.1098
0
0
0
0.1059
0
0
0
0.1059
0
0
0
0.102
0
0
0
0.102
0
0
0
0.098
0
0
0
0.0941
0
0
0
0.0941
0
0
0
0.0902
0
0
0
0.0902
0
0
0
0.0863
0
0
0
0.0863
0
0
0
0.0824
0
0
0
0.0784
0
0
0
0.0784
0
0
0
0.0745
0
0
0
0.0745
0
0
0
0.0706
0
0
0
0.0706
0
0
0
0.0667
0
0
0
0.0667
0
0
0
0.0627
0
0
0
0.0627
0
0
0
0.0588
0
0
0
0.0588
0
0
0
0.0549
0
0
0
0.0549
0
0
0
0.051
0
0
0
0.051
0
0
0
0.0471
0
0
0
0.0471
0
0
0
0.0431
0
0
0
0.0431
0
0
0
0.0392
0
0
0
0.0392
0
0
0
0.0353
0
0
0
0.0353
0
0
0
0.0314
0
0
0
0.0314
0
0
0
0.0314
0
0
0
0.0275
0
0
0
0.0275
0
0
0
0.0235
0
0
0
0.0235
0
0
0
0.0235
0
0
0
0.0196
0
0
0
0.0196
0
0
0
0.0157
0
0
0
0.0157
0
0
0
0.0157
0
0
0
0.0118
0
0
0
0.0118
0
0
0
0.0118
0
0
0
0.0078
0
0
0
0.0078
0
0
0
0.0078
0
0
0
0.0039
0
0
0
0.0039
0
0
0
0.0039
0
0
0
0.0039
0
0
0
0
0
0
0
0
0
0
0
0
] def
{ 2 array 1 array 3 2 roll
0 sub 335 mul 0 add
dup 0 lt { pop 0 } { dup 335 gt { pop 335 } if } ifelse
dup floor cvi exch dup ceiling cvi exch 2 index sub
3 index 0 3 2 roll put
3 index 1 3 2 roll put
2 index 0 3 2 roll put
xpdfSamples13
2 index 0 get
4 mul 0 add get
xpdfSamples13
3 index 1 get
4 mul 0 add get
2 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples13
3 index 0 get
4 mul 1 add get
xpdfSamples13
4 index 1 get
4 mul 1 add get
3 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples13
4 index 0 get
4 mul 2 add get
xpdfSamples13
5 index 1 get
4 mul 2 add get
4 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples13
5 index 0 get
4 mul 3 add get
xpdfSamples13
6 index 1 get
4 mul 3 add get
5 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
6 4 roll pop pop }
/xpdfFunc10_2 exch def
/xpdfSamples14 [
0
0
0
0
0
0
0
0
] def
{ 2 array 1 array 3 2 roll
0 sub 1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup floor cvi exch dup ceiling cvi exch 2 index sub
3 index 0 3 2 roll put
3 index 1 3 2 roll put
2 index 0 3 2 roll put
xpdfSamples14
2 index 0 get
4 mul 0 add get
xpdfSamples14
3 index 1 get
4 mul 0 add get
2 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples14
3 index 0 get
4 mul 1 add get
xpdfSamples14
4 index 1 get
4 mul 1 add get
3 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples14
4 index 0 get
4 mul 2 add get
xpdfSamples14
5 index 1 get
4 mul 2 add get
4 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples14
5 index 0 get
4 mul 3 add get
xpdfSamples14
6 index 1 get
4 mul 3 add get
5 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
6 4 roll pop pop }
/xpdfFunc10_3 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup 0.0113 lt { 0 sub 88.5034 mul 0 add xpdfFunc10_0 } {
dup 0.0113 lt { 0.0113 sub 0 mul 0 add xpdfFunc10_1 } {
dup 0.9887 lt { 0.0113 sub 1.0231 mul 0 add xpdfFunc10_2 } {
0.9887 sub 88.5112 mul 0 add xpdfFunc10_3
} ifelse
} ifelse
} ifelse
}
def
0.2715 0.8643 0 axialSH
Q
Q
q
1072.04 556.711 m
1072.38 556.711 l
577.375 556.711 213.625 605.461 37.375 650.461 c
37.375 545.93 l
213.625 500.93 577.375 452.18 1072.38 452.18 c
1072.04 452.18 l
1072.04 556.711 l
W
/DeviceCMYK {} cs
[0 0 0 0] sc
1072.04 556.711 m
1072.38 556.711 l
577.375 556.711 213.625 605.461 37.375 650.461 c
37.375 545.93 l
213.625 500.93 577.375 452.18 1072.38 452.18 c
1072.04 452.18 l
1072.04 556.711 l
f
q
1072.04 556.711 m
1072.38 556.711 l
577.375 556.711 213.625 605.461 37.375 650.461 c
37.375 545.93 l
213.625 500.93 577.375 452.18 1072.38 452.18 c
1072.04 452.18 l
1072.04 556.711 l
W
/DeviceCMYK {} cs
[1076.27 -975.02 -603.133 -665.761 499.201 1207.83] cm
/t0 0 def
/t1 1 def
/dt 1 def
/x0 0 def
/y0 0 def
/dx 1 def
/x1 1 def
/y1 0 def
/dy 0 def
/xMin 0.022 def
/yMin 0.0314 def
/xMax 0.6418 def
/yMax 0.9685 def
/n 4 def
/func /xpdfSamples16 [
0
0
0
0
0
0
0
0
] def
{ 2 array 1 array 3 2 roll
0 sub 1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup floor cvi exch dup ceiling cvi exch 2 index sub
3 index 0 3 2 roll put
3 index 1 3 2 roll put
2 index 0 3 2 roll put
xpdfSamples16
2 index 0 get
4 mul 0 add get
xpdfSamples16
3 index 1 get
4 mul 0 add get
2 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples16
3 index 0 get
4 mul 1 add get
xpdfSamples16
4 index 1 get
4 mul 1 add get
3 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples16
4 index 0 get
4 mul 2 add get
xpdfSamples16
5 index 1 get
4 mul 2 add get
4 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples16
5 index 0 get
4 mul 3 add get
xpdfSamples16
6 index 1 get
4 mul 3 add get
5 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
6 4 roll pop pop }
/xpdfFunc15_0 exch def
/xpdfSamples17 [
0
0
0
0
0
0
0
0.0039
0
0
0
0.0078
0
0
0
0.0118
0
0
0
0.0157
0
0
0
0.0196
0
0
0
0.0235
0
0
0
0.0275
0
0
0
0.0314
0
0
0
0.0353
0
0
0
0.0392
0
0
0
0.0431
0
0
0
0.0471
0
0
0
0.051
0
0
0
0.0549
0
0
0
0.0588
0
0
0
0.0627
0
0
0
0.0667
0
0
0
0.0706
0
0
0
0.0745
0
0
0
0.0784
0
0
0
0.0824
0
0
0
0.0863
0
0
0
0.0902
0
0
0
0.0941
0
0
0
0.098
0
0
0
0.102
0
0
0
0.1059
0
0
0
0.1098
0
0
0
0.1137
0
0
0
0.1176
0
0
0
0.1216
0
0
0
0.1255
0
0
0
0.1294
0
0
0
0.1333
0
0
0
0.1373
0
0
0
0.1412
0
0
0
0.1451
0
0
0
0.149
0
0
0
0.1529
0
0
0
0.1569
0
0
0
0.1608
0
0
0
0.1647
0
0
0
0.1686
0
0
0
0.1725
0
0
0
0.1765
0
0
0
0.1804
0
0
0
0.1843
0
0
0
0.1882
0
0
0
0.1922
0
0
0
0.1961
0
0
0
0.2
0
0
0
0.2039
0
0
0
0.2078
0
0
0
0.2118
0
0
0
0.2157
0
0
0
0.2196
0
0
0
0.2235
0
0
0
0.2275
0
0
0
0.2314
0
0
0
0.2353
0
0
0
0.2392
0
0
0
0.2431
0
0
0
0.2471
0
0
0
0.251
0
0
0
0.2549
0
0
0
0.2588
0
0
0
0.2627
0
0
0
0.2667
0
0
0
0.2706
0
0
0
0.2745
0
0
0
0.2784
0
0
0
0.2824
0
0
0
0.2863
0
0
0
0.2902
0
0
0
0.2941
0
0
0
0.298
0
0
0
0.302
0
0
0
0.3059
0
0
0
0.3098
0
0
0
0.3137
0
0
0
0.3176
0
0
0
0.3216
0
0
0
0.3255
0
0
0
0.3294
0
0
0
0.3333
0
0
0
0.3373
0
0
0
0.3412
0
0
0
0.3451
0
0
0
0.349
0
0
0
0.3529
0
0
0
0.3569
0
0
0
0.3608
0
0
0
0.3647
0
0
0
0.3686
0
0
0
0.3725
0
0
0
0.3765
0
0
0
0.3804
0
0
0
0.3843
0
0
0
0.3882
0
0
0
0.3922
0
0
0
0.3961
0
0
0
0.4
0
0
0
0.4039
0
0
0
0.4078
0
0
0
0.4118
0
0
0
0.4157
0
0
0
0.4196
0
0
0
0.4235
0
0
0
0.4275
0
0
0
0.4314
0
0
0
0.4353
0
0
0
0.4392
0
0
0
0.4431
0
0
0
0.4471
0
0
0
0.451
0
0
0
0.4549
0
0
0
0.4588
0
0
0
0.4627
0
0
0
0.4667
0
0
0
0.4706
0
0
0
0.4745
0
0
0
0.4784
0
0
0
0.4824
0
0
0
0.4863
0
0
0
0.4902
0
0
0
0.4941
0
0
0
0.498
0
0
0
0.502
0
0
0
0.5059
0
0
0
0.5098
0
0
0
0.5137
0
0
0
0.5176
0
0
0
0.5216
0
0
0
0.5255
0
0
0
0.5294
0
0
0
0.5333
0
0
0
0.5373
0
0
0
0.5412
0
0
0
0.5451
0
0
0
0.549
0
0
0
0.5529
0
0
0
0.5569
0
0
0
0.5608
0
0
0
0.5647
0
0
0
0.5686
0
0
0
0.5725
0
0
0
0.5765
0
0
0
0.5804
0
0
0
0.5843
0
0
0
0.5882
0
0
0
0.5922
0
0
0
0.5961
0
0
0
0.6
0
0
0
0.6039
0
0
0
0.6078
0
0
0
0.6118
0
0
0
0.6157
0
0
0
0.6196
0
0
0
0.6235
0
0
0
0.6275
0
0
0
0.6314
0
0
0
0.6353
0
0
0
0.6392
0
0
0
0.6431
0
0
0
0.6431
0
0
0
0.6471
0
0
0
0.651
0
0
0
0.6549
0
0
0
0.6588
0
0
0
0.6627
0
0
0
0.6667
0
0
0
0.6706
0
0
0
0.6745
0
0
0
0.6784
0
0
0
0.6824
0
0
0
0.6863
0
0
0
0.6902
0
0
0
0.6941
0
0
0
0.698
0
0
0
0.702
0
0
0
0.7059
0
0
0
0.7098
0
0
0
0.7137
0
0
0
0.7176
0
0
0
0.7216
0
0
0
0.7255
0
0
0
0.7294
0
0
0
0.7333
0
0
0
0.7373
0
0
0
0.7412
0
0
0
0.7451
0
0
0
0.749
0
0
0
0.7529
0
0
0
0.7569
0
0
0
0.7608
0
0
0
0.7647
0
0
0
0.7686
0
0
0
0.7725
0
0
0
0.7765
0
0
0
0.7804
0
0
0
0.7843
0
0
0
0.7882
0
0
0
0.7922
0
0
0
0.7961
0
0
0
0.8
0
0
0
0.8039
0
0
0
0.8078
0
0
0
0.8118
0
0
0
0.8157
0
0
0
0.8196
0
0
0
0.8235
0
0
0
0.8275
0
0
0
0.8314
0
0
0
0.8353
0
0
0
0.8392
0
0
0
0.8431
0
0
0
0.8471
0
0
0
0.851
0
0
0
0.8549
0
0
0
0.8588
0
0
0
0.8627
0
0
0
0.8667
0
0
0
0.8706
0
0
0
0.8745
0
0
0
0.8784
0
0
0
0.8824
0
0
0
0.8863
0
0
0
0.8902
0
0
0
0.8941
0
0
0
0.898
0
0
0
0.902
0
0
0
0.9059
0
0
0
0.9098
0
0
0
0.9137
0
0
0
0.9176
0
0
0
0.9216
0
0
0
0.9255
0
0
0
0.9294
0
0
0
0.9333
0
0
0
0.9373
0
0
0
0.9373
0
0
0
0.9412
0
0
0
0.9451
0
0
0
0.949
0
0
0
0.9529
0
0
0
0.9569
0
0
0
0.9608
0
0
0
0.9647
0
0
0
0.9686
0
0
0
0.9725
0
0
0
0.9765
0
0
0
0.9804
0
0
0
0.9843
0
0
0
0.9882
0
0
0
0.9922
0
0
0
0.9961
0
0
0
1
] def
{ 2 array 1 array 3 2 roll
0 sub 257 mul 0 add
dup 0 lt { pop 0 } { dup 257 gt { pop 257 } if } ifelse
dup floor cvi exch dup ceiling cvi exch 2 index sub
3 index 0 3 2 roll put
3 index 1 3 2 roll put
2 index 0 3 2 roll put
xpdfSamples17
2 index 0 get
4 mul 0 add get
xpdfSamples17
3 index 1 get
4 mul 0 add get
2 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples17
3 index 0 get
4 mul 1 add get
xpdfSamples17
4 index 1 get
4 mul 1 add get
3 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples17
4 index 0 get
4 mul 2 add get
xpdfSamples17
5 index 1 get
4 mul 2 add get
4 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples17
5 index 0 get
4 mul 3 add get
xpdfSamples17
6 index 1 get
4 mul 3 add get
5 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
6 4 roll pop pop }
/xpdfFunc15_1 exch def
/xpdfSamples18 [
0
0
0
1
0
0
0
1
] def
{ 2 array 1 array 3 2 roll
0 sub 1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup floor cvi exch dup ceiling cvi exch 2 index sub
3 index 0 3 2 roll put
3 index 1 3 2 roll put
2 index 0 3 2 roll put
xpdfSamples18
2 index 0 get
4 mul 0 add get
xpdfSamples18
3 index 1 get
4 mul 0 add get
2 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples18
3 index 0 get
4 mul 1 add get
xpdfSamples18
4 index 1 get
4 mul 1 add get
3 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples18
4 index 0 get
4 mul 2 add get
xpdfSamples18
5 index 1 get
4 mul 2 add get
4 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples18
5 index 0 get
4 mul 3 add get
xpdfSamples18
6 index 1 get
4 mul 3 add get
5 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
6 4 roll pop pop }
/xpdfFunc15_2 exch def
/xpdfSamples19 [
0
0
0
1
0
0
0
1
] def
{ 2 array 1 array 3 2 roll
0 sub 1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup floor cvi exch dup ceiling cvi exch 2 index sub
3 index 0 3 2 roll put
3 index 1 3 2 roll put
2 index 0 3 2 roll put
xpdfSamples19
2 index 0 get
4 mul 0 add get
xpdfSamples19
3 index 1 get
4 mul 0 add get
2 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples19
3 index 0 get
4 mul 1 add get
xpdfSamples19
4 index 1 get
4 mul 1 add get
3 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples19
4 index 0 get
4 mul 2 add get
xpdfSamples19
5 index 1 get
4 mul 2 add get
4 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples19
5 index 0 get
4 mul 3 add get
xpdfSamples19
6 index 1 get
4 mul 3 add get
5 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
6 4 roll pop pop }
/xpdfFunc15_3 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
dup 0.0113 lt { 0 sub 88.5034 mul 0 add xpdfFunc15_0 } {
dup 0.9887 lt { 0.0113 sub 1.0231 mul 0 add xpdfFunc15_1 } {
dup 0.9944 lt { 0.9887 sub 177.0538 mul 0 add xpdfFunc15_2 } {
0.9944 sub 176.9912 mul 0 add xpdfFunc15_3
} ifelse
} ifelse
} ifelse
}
def
0.022 0.6418 0 axialSH
Q
Q
q
0 0 3326 651 re
W
/DeviceCMYK {} cs
[0 0 0 0] sc
964.027 133.125 212.602 318.891 re
f
/DeviceCMYK {} cs
[0 0 0 1] sc
976.504 356.312 m
968.285 369.824 l
968.75 370.133 l
990.781 361.383 l
998.457 359.688 1006.14 358.004 1013.81 356.312 c
1006.14 354.625 998.457 352.934 990.781 351.246 c
968.75 342.496 l
968.285 342.73 l
976.504 356.312 l
f
5 w
4 M
/DeviceCMYK {} CS
[0 0 0 1] SC
530.328 356.312 m
980.328 356.312 l
S
130.328 356.312 m
355.328 356.312 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 40.0328 33.8813] Tm
0 0 Td
/F18_0 7 Tf
(q) 3.892 Tj
[1 0 0 1 44.6246 31.8813] Tm
0 0 Td
/F18_0 5 Tf
(in) 3.89 Tj
Q
/DeviceCMYK {} cs
[1 1 1 0] sc
1586.54 383.215 m
1576.33 395.289 l
1576.74 395.664 l
1599.86 390.422 l
1607.71 389.938 1615.55 389.453 1623.39 388.969 c
1616.07 386.117 1608.75 383.266 1601.43 380.41 c
1581.01 368.359 l
1580.52 368.52 l
1586.54 383.215 l
f
1586.54 383.215 m
1576.33 395.289 l
1576.74 395.664 l
1599.86 390.422 l
1607.71 389.938 1615.55 389.453 1623.39 388.969 c
1616.07 386.117 1608.75 383.266 1601.43 380.41 c
1581.01 368.359 l
1580.52 368.52 l
1586.54 383.215 l
h
S
1644.71 391.312 m
1769.71 406.312 1823.88 414.516 1981.58 451.312 c
S
/DeviceCMYK {} cs
[0 0 0 1] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 200.033 43.3813] Tm
0 0 Td
/F18_0 7 Tf
(Particle path) 38.906 Tj
-41.375 -14.5004 Td
(q) 3.892 Tj
[1 0 0 1 163.25 26.8809] Tm
0 0 Td
/F18_0 5 Tf
(out) 6.95 Tj
[1 0 0 1 200.242 26.8672] Tm
0 0 Td
/F19_0 7 Tf
(d) 3.458 Tj
[1 0 0 1 203.701 26.8672] Tm
0 0 Td
/F18_0 7 Tf
(t + ) 9.926 Tj
[1 0 0 1 188.203 21.2422] Tm
0 0 Td
/F19_0 7 Tf
(\266) 3.458 Tj
[1 0 0 1 191.662 21.2422] Tm
0 0 Td
/F18_0 7 Tf
(t) 1.946 Tj
Q
1842.83 289.922 m
1975.33 289.922 l
f
1842.83 289.922 m
1975.33 289.922 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 176.283 27.3809] Tm
0 0 Td
/F18_0 7 Tf
(=) 4.088 Tj
[1 0 0 1 220.183 21.2422] Tm
0 0 Td
/F19_0 7 Tf
(\266) 3.458 Tj
[1 0 0 1 223.642 21.2422] Tm
0 0 Td
/F18_0 7 Tf
(x) 3.5 Tj
Q
2170.33 287.227 m
2302.83 287.227 l
f
2170.33 287.227 m
2302.83 287.227 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 219.987 32.3613] Tm
0 0 Td
/F19_0 7 Tf
(\266) 3.458 Tj
[1 0 0 1 223.446 32.3613] Tm
0 0 Td
/F18_0 7 Tf
(q) 3.892 Tj
[1 0 0 1 233.061 26.8672] Tm
0 0 Td
/F19_0 7 Tf
(d) 3.458 Tj
[1 0 0 1 236.52 26.8672] Tm
0 0 Td
/F18_0 7 Tf
(x +) 9.534 Tj
15.9289 2.0137 Td
(q) 3.892 Tj
[1 0 0 1 257.041 26.8809] Tm
0 0 Td
/F18_0 5 Tf
(i) 1.11 Tj
-100.029 TJm
(n) 2.78 Tj
Q
2796.58 508.812 m
2796.58 13.8086 l
3291.58 13.8086 l
S
/DeviceCMYK {} cs
[1 1 1 0] sc
3287.76 13.8086 m
3279.54 27.3242 l
3280 27.6367 l
3302.03 18.8867 l
3309.71 17.1875 3317.39 15.5078 3325.06 13.8086 c
3317.39 12.1289 3309.71 10.4297 3302.03 8.75 c
3280 0 l
3279.54 0.2266 l
3287.76 13.8086 l
f
2796.58 504.984 m
2783.07 496.773 l
2782.76 497.234 l
2791.51 519.27 l
2793.2 526.941 2794.89 534.617 2796.58 542.297 c
2798.27 534.617 2799.96 526.941 2801.65 519.27 c
2810.4 497.234 l
2810.18 496.773 l
2796.58 504.984 l
f
2796.58 13.8086 m
2931.58 142.559 l
S
/DeviceCMYK {} cs
[0 0 0 1] sc
2928.84 139.934 m
2913.56 144.043 l
2913.69 144.578 l
2935.67 153.457 l
2942.39 157.52 2949.11 161.602 2955.84 165.684 c
2951.45 159.16 2947.06 152.637 2942.67 146.113 c
2932.76 124.578 l
2932.27 124.434 l
2928.84 139.934 l
f
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 297.408 19.1309] Tm
0 0 Td
/F18_0 7 Tf
(y,v) 8.946 Tj
22.5 -14.5 Td
(x,u) 9.338 Tj
-18.75 38.7504 Td
(z,w) 10.5 Tj
[1 0 0 1 187.23 32.3613] Tm
0 0 Td
/F19_0 7 Tf
(\266) 3.458 Tj
[1 0 0 1 190.689 32.3613] Tm
0 0 Td
/F18_0 7 Tf
(q) 3.892 Tj
Q
/DeviceCMYK {} cs
[0 0 0 0] sc
1282.99 558.316 m
1176.63 452.016 l
964.027 452.016 l
1070.33 558.316 l
1282.99 558.316 l
f
1176.61 133.125 m
1282.96 238.438 l
1282.99 558.316 l
1176.61 452.016 l
1176.61 133.125 l
f
1210.12 356.352 m
1210.15 255.078 l
1254.37 304.844 l
1254.37 406.266 l
1210.12 356.352 l
f
7.5 w
1 j
1210.12 356.352 m
1210.15 255.078 l
1254.37 304.844 l
1254.37 406.266 l
1210.12 356.352 l
h
S
5 w
0 j
1228.73 362.488 m
1341.92 363.547 1426.54 358.215 1586.54 383.215 c
S
7.5 w
/DeviceCMYK {} CS
[0.3528 0.2549 0.2234 0.0667] SC
1070.33 238.438 m
1282.99 238.438 l
S
964.027 133.125 m
1070.33 238.438 l
1070.33 558.316 l
S
1 j
/DeviceCMYK {} CS
[0 0 0 1] SC
1282.96 558.316 m
1176.61 452.016 l
964.004 452.016 l
1070.31 558.316 l
1282.96 558.316 l
h
S
964.004 133.113 212.605 318.902 re
S
1176.61 133.125 m
1282.96 238.438 l
1282.99 558.316 l
1176.61 452.016 l
1176.61 133.125 l
h
S
0 j
/DeviceCMYK {} CS
[0.3528 0.2549 0.2234 0.0667] SC
991.68 356.352 m
991.879 255.078 l
1036.08 304.844 l
1036.08 406.266 l
991.68 356.352 l
h
S
Q
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font XAJPSA+Helvetica-Oblique
%%+ font UVLFCH+Symbol
%%EOF
