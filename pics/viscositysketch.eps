%!PS-Adobe-3.0 EPSF-3.0
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 325 78
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font JZGHNU+Helvetica-Oblique
%!FontType1-1.0: JZGHNU+Helvetica-Oblique
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.) readonly def
/FullName (Helvetica Oblique) readonly def
/FamilyName (Helvetica) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /JZGHNU+Helvetica-Oblique def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0.00021256 0.001 0 0] readonly def
/FontBBox [0 -220 928 718] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 77 /M put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF5
C3774E7B2651BA805CFCEABAB28B93EAAD2BB6A5CFC5D2544FF6219CFFA3F4C2
8843A005E5F618402AB519A75D5A7B712BDDC826203B0F8F0F0F6E7818F1453F
9BD8CBA277B11EF4CA4EB11EFFC56850663915F2E1D939BCE0A621F4E2028E4D
0AE8434DB4161B0CBF14A4F6EA9C62CB3BF9051FC63A4FDA75D8056CA1B059F3
853DEC8C386E851F9711E86DF10E449B0171EE395F1EF18DE1408FAB32A4DB1F
70A7A08482419B27C4B30548761503A7B5B22C1CF4228A7773A884020CF4DBB0
CBD7547F078945A3033D2BD0C5F56A2369D2536397FD7A5EF03B77F803359E31
8EF96B971889020D6E15AF71AA7AC9D1491151344ED58A7E32F72DA866BEDCD7
D8ABC81726C8DEB4A1367A13DF4F65BF7B4D4906C015B72EDC4326884A02E1F9
C973F20BF5CD369AA7D4E5DC84700E0F8BA18D09E58BE3F7A591C1CD8BC11107
D7BED5360FA640A763239BD97BAAA9036458C0B9F96A2FEB44772F807FCBA8F1
AA9E314E9660B51B6CAB69387994A7489538EEF98DA779F540F2D7FEE4680340
B10BCF277F9C494974F3743F65BECD205265B1766AD55FBF869404A62C155010
70931E11A4715D15985D19A60B4940D8A1ABEF706671BFF603372AEFD997E45E
D20D2B37B87F35D1E930569BCB28D841DEB8B03E9226794AD120A5E6B85DBA0D
133FFA171CB6358E7D391CC4D741F22B1ECEB1F88DF77A2D6D98CEF826D5935A
6D7F8D80617809EC515864047051A7274FD765ABA74F3AE11C17EB243FF7C130
2B33968EF5412AC6824D78DB58CF7A06D46E86673B89C14DB58FAB8A3A368210
B240733A2892C56DE542E1A406D03BE62F19FD0A22014F3DB054706AE931F0A9
41A1022E897DC8229960BF514D6AA3C806FBC0E18A9D30B9E054057FD606C173
C2A6691AB90BF413D704F37AF8FA4F172107E835E0B256234334C3FF4860D0D9
C2C09E77AAB32C0CA6FCA5A398F820572FEA3C7B96B11F00609557843A99FAFD
FFC7907E9A6B65AA80509F4826860FA1B9BA4F9C1F52C21F0CBAB21E520F7A5D
DC11D3A399CF849BF1D68020A689BFD22621A8A5D17EF8DF5017D1BE548B6B9F
D195D27C2228EE2365A4C5B14684C130195075CB308C739195FC0A875619DCDA
2DD8606D7E30CE93626636920365903BC55F947CEB309AD7EA0F87AB0FBB3D34
D08F4D6960F28FCD2FC0EB9F9D0482069C22ECC820F66E8472208DB6C4617B5D
FA1E166B149EBF56F84DE195AA30E8C1D24897E7240ED112562D345983E4F46B
799D33CFDF517AA272161FFD9DFDA962D23603BCCCD3D90CC74FFBC4D3D7AB5A
AAE9DAF9C0FA12F1219140D63D9F0A200817CC88D94BE69C0C5357D699BFD6DA
7038C0DA3D2F3A008FD555E2F3CB1C88A8F6D2B2EDBCAF68AF1DA08CFBE82F1C
2AB4A18534B5BEDDF1813B9E7CDFF5E4EBA84085D0CC1ECF7A4039E685B98BB8
16848904B076C42F0BE8D10259D62608C3EBD71259DFD45519991BBE0236A2AE
FF232C9841E466AAC3FFEE4737CF8E85F8B7D2AEB3DC707BA963D3F27E237FFA
02A108731A2C22A67CC1A56876B7991CA1C1AA53A6131FE1ABB519D685E99F5B
E6895DC98E4CC161BCC3C522CF59037BAEC8711AA69CF5CD01917E819400CC6F
9BA3698F9B9C864340E8D44650767BF232E89A6225DA5DBBB8D0E95651846C74
A7222BCA35537128A3D4C9A2D0FCA997A067F6E82B91924A1F9C51E1250F3913
EB57FC595D04DB14A00CF9C2FF4EDC0F93B10675730D32C93775DDFF508F30B6
D59769886D5E7896509ECB4912DEA7AC4BD1D0644F43822548A8C0A407C53A77
DC2AC2F54ABC22EF64749B2C4E4CDF90857E0E2FD433B7651FEAB8A06055E043
F4F6561A784FECA6340A2DCE3376B4973DE5E7B24557BB610E131F6CB43897DD
A8EDAA74AD43C4F1E218F9C23A3911D1AE07A7FB77FCACD597B9E6398CA58A6B
994C2C68D34E235E884EBCA4EF943A03F3C1AC8DD5B404CBEAA3855B3065BCE5
ED3AAAE39D7BA028B40AC1A66366629213E5F478D647EC81EC5573637C995B26
5F9B3073E91C864BE99BE972C989EE71BF60A495005A9DF5162A75E7F1C5D760
E92FF0C51F62194E201A920D84E92418EDE361D9DEA55072689D6F2B67A4CA97
C5426E614694984579B5C5584AE0854F8C4CAD3AC40C11BE2C8A26FF07603CD5
D49C8814CA266E7E04F6F43B466DB3C41D748E7327BDC32C9DF85E23FFB772DA
A521A9A8715DF2B29106880AD9D681832C4CE881BD20D1EC287CE4A68DAE8AA7
F9D5140155A0ED1EB62C3D31B158CBC8E065F9D97A74F7593F65CB4892462629
5E2FF93647C6C874EB22EAFB80450EC6E8C0DB827F5C4CC156C084001F726AA6
7EFBA67D595D6FDF42F60251C4C6199313D35F87AF5A26A997A3B33AF94C58F0
68889DFF3AD540E1893EE7BA5BC38B4217E0AC6A92A420105C793F72CDB2E16E
D4B17676BBE0DFC252E4D0C7116B0B63490E45BFB284F712224950284A62A476
2948218DA1DB33D33D4DEB7AC7180FC2CDE3C728B1622E64BE719FA447519296
B14A110EAA599E7B6CA21ADE7E331CE5B70671C0C4FDF37B61EA0E51F15E37D2
16F7387380CAB72F096B32F8E624348290816AF3ADCE9B8719A34ED689940326
17973636C6EBC845CB68CE441E40ED502BA51B6BF96D5516CBA69AB5131208E3
46C0BE3C2C08FDB7AC725200559CC012233F09A3C001EF7F3E45A50B3199EFD5
6E5E13CA298EABC4E3BE7E9FE2B87C2824014D9CF930416BF55904A8F1EB0669
CFD5F9EEC580586DB6888276B2E18B79D52C3987245DB35B2B9E2EA751F6F9DC
F4703BF4BD3F8A8E08479829FB514B0E64FA20F017E469E41693436F38B99BEC
AE1EC91B6E829512911150763C7D605C06A8873AC5E0253E84697C00E7046D14
EC08C9CABDCCA36C7BA5B69B051D16BB39C5EF379792FDD4B00E9A45CF05B820
79B457F8B834DE85B94F24E0DBD613F07F5D50172781B2BE29B394BEE43BD035
E861489CACE80E1AF8A496A7DC336BE179678A18D00BE333DF4956769F1ECEBE
6BBCC30EBF4AF5852DEE50A5DB0E0A27572122D90196AB1BEF24742474C169CF
1EA5332AC0B0E83A06A95E5538632B58DD85FF7DC0D320D9330A3EB3D97D0196
3B43B1F1456C27BF6C27EA19A24A370D26A8018B4274DF0672D0A54E59DD74BD
C85F7A8ECCC75C5A415359D4D852C9CF07FB9DC80C58BA7E7D7D5B6C21EDF3ED
A8FF79B7F9544527542E263D9F589FBC4863781158FF2ED6AEC28E0A04016415
AE0440949665AC384A2CB93437FB050466EEE506E3FB9717BE5314B3131A14C1
158B44C9BC4E5D9F99C85DD16438555BA23FC9F31F420332749893ACE713592F
E086FB7267DD7BC39A96B4F945BFFD82813902455DF4260E561A7D8701706263
4C63B6D2E564493D3DEB19215183FDF998A169DE628B8426683F06C9CD5AED2B
B058D7FC4939DD57C6D9D452112B9DE60C35FE2E7F699ABC1279CD3084101C9C
6926FDB015356FB2F8603AA662CB0E72B4475A4C00A8C5D201E39E739533128F
992D6775961F75CFEAFDAD239B14
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F12_0 /JZGHNU+Helvetica-Oblique 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[1 0 0 1 1 -1] cm
q
[1 0 0 1 0 0] cm
0 0 612 792 re
W
q
[0.1 0 0 0.1 0 0] cm
q
18.4219 32.2266 3118.1181 141.7264 re
W
/DeviceCMYK {} cs
[0 0 0 0] sc
18.4219 32.2266 3118.12 141.727 re
f
q
18.4219 32.2266 3118.12 141.727 re
W
/DeviceCMYK {} cs
[-0 141.729 3158.12 0.0001 -1.5771 32.237] cm
/t0 0 def
/t1 1 def
/dt 1 def
/x0 0 def
/y0 0 def
/dx 1 def
/x1 1 def
/y1 0 def
/dy 0 def
/xMin -0.0001 def
/yMin 0.0063 def
/xMax 0.9999 def
/yMax 0.9937 def
/n 4 def
/func /xpdfSamples1 [
0
0
0
0
0
0
0
0.0039
0
0
0
0.0078
0
0
0
0.0118
0
0
0
0.0157
0
0
0
0.0196
0
0
0
0.0235
0
0
0
0.0275
0
0
0
0.0314
0
0
0
0.0353
0
0
0
0.0392
0
0
0
0.0431
0
0
0
0.0471
0
0
0
0.051
0
0
0
0.0549
0
0
0
0.0588
0
0
0
0.0627
0
0
0
0.0667
0
0
0
0.0706
0
0
0
0.0745
0
0
0
0.0784
0
0
0
0.0824
0
0
0
0.0863
0
0
0
0.0902
0
0
0
0.0941
0
0
0
0.098
0
0
0
0.102
0
0
0
0.1059
0
0
0
0.1098
0
0
0
0.1137
0
0
0
0.1176
0
0
0
0.1216
0
0
0
0.1255
0
0
0
0.1294
0
0
0
0.1333
0
0
0
0.1373
0
0
0
0.1412
0
0
0
0.1451
0
0
0
0.149
0
0
0
0.1529
0
0
0
0.1569
0
0
0
0.1608
0
0
0
0.1647
0
0
0
0.1686
0
0
0
0.1725
0
0
0
0.1765
0
0
0
0.1804
0
0
0
0.1843
0
0
0
0.1882
0
0
0
0.1922
0
0
0
0.1961
0
0
0
0.2
0
0
0
0.2039
0
0
0
0.2078
0
0
0
0.2118
0
0
0
0.2157
0
0
0
0.2196
0
0
0
0.2235
0
0
0
0.2275
0
0
0
0.2314
0
0
0
0.2353
0
0
0
0.2392
0
0
0
0.2431
0
0
0
0.2471
0
0
0
0.251
0
0
0
0.2549
0
0
0
0.2588
0
0
0
0.2627
0
0
0
0.2667
0
0
0
0.2706
0
0
0
0.2745
0
0
0
0.2784
0
0
0
0.2824
0
0
0
0.2863
0
0
0
0.2902
0
0
0
0.2941
0
0
0
0.298
0
0
0
0.302
0
0
0
0.3059
0
0
0
0.3098
0
0
0
0.3137
0
0
0
0.3176
0
0
0
0.3216
0
0
0
0.3255
0
0
0
0.3294
0
0
0
0.3333
0
0
0
0.3373
0
0
0
0.3412
0
0
0
0.3451
0
0
0
0.349
0
0
0
0.3529
0
0
0
0.3569
0
0
0
0.3608
0
0
0
0.3647
0
0
0
0.3686
0
0
0
0.3725
0
0
0
0.3765
0
0
0
0.3804
0
0
0
0.3843
0
0
0
0.3882
0
0
0
0.3922
0
0
0
0.3961
0
0
0
0.4
0
0
0
0.4039
0
0
0
0.4078
0
0
0
0.4118
0
0
0
0.4157
0
0
0
0.4196
0
0
0
0.4235
0
0
0
0.4275
0
0
0
0.4314
0
0
0
0.4353
0
0
0
0.4392
0
0
0
0.4431
0
0
0
0.4471
0
0
0
0.451
0
0
0
0.4549
0
0
0
0.4588
0
0
0
0.4627
0
0
0
0.4667
0
0
0
0.4706
0
0
0
0.4745
0
0
0
0.4784
0
0
0
0.4824
0
0
0
0.4863
0
0
0
0.4902
0
0
0
0.4941
0
0
0
0.502
] def
{ 2 array 1 array 3 2 roll
0 sub 127 mul 0 add
dup 0 lt { pop 0 } { dup 127 gt { pop 127 } if } ifelse
dup floor cvi exch dup ceiling cvi exch 2 index sub
3 index 0 3 2 roll put
3 index 1 3 2 roll put
2 index 0 3 2 roll put
xpdfSamples1
2 index 0 get
4 mul 0 add get
xpdfSamples1
3 index 1 get
4 mul 0 add get
2 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples1
3 index 0 get
4 mul 1 add get
xpdfSamples1
4 index 1 get
4 mul 1 add get
3 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples1
4 index 0 get
4 mul 2 add get
xpdfSamples1
5 index 1 get
4 mul 2 add get
4 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
xpdfSamples1
5 index 0 get
4 mul 3 add get
xpdfSamples1
6 index 1 get
4 mul 3 add get
5 index 0 get dup
3 2 roll mul exch 1 exch sub 3 2 roll mul add
1 1 roll
1 mul 0 add
dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
6 4 roll pop pop }
/xpdfFunc0_0 exch def
{ dup 0 lt { pop 0 } { dup 1 gt { pop 1 } if } ifelse
0 sub 1 mul 0 add xpdfFunc0_0
}
def
-0.0001 0.9999 0 axialSH
Q
Q
q
0 0 3237.49 785.531 re
W
7.5 w
4 M
/DeviceCMYK {} CS
[0 0 0 1] SC
18.4219 173.953 m
3192.84 174.074 l
S
/DeviceCMYK {} cs
[0 0 0 1] sc
3187.74 174.074 m
3176.78 192.09 l
3177.4 192.5 l
3206.77 180.828 l
3217.01 178.586 3227.24 176.34 3237.49 174.082 c
3227.24 171.824 3217.01 169.578 3206.77 167.324 c
3177.4 155.656 l
3176.78 155.969 l
3187.74 174.074 l
f
18.4219 32.2266 m
18.4219 740.891 l
S
18.4219 735.793 m
0.4102 724.84 l
0 725.453 l
11.6719 754.828 l
13.9219 765.062 16.1719 775.297 18.4219 785.531 c
20.6758 775.297 22.9258 765.062 25.1758 754.828 c
36.8477 725.453 l
36.5391 724.84 l
18.4219 735.793 l
f
18.4219 173.953 m
167.832 244.074 307.832 444.078 301.887 740.891 c
S
5 w
15.332 316.574 m
147.832 316.574 l
S
145.285 316.574 m
139.805 325.586 l
140.113 325.789 l
154.801 319.949 l
159.918 318.828 165.035 317.703 170.152 316.574 c
165.035 315.457 159.918 314.324 154.801 313.203 c
140.113 307.371 l
139.805 307.52 l
145.285 316.574 l
f
15.332 451.578 m
230.332 451.578 l
S
227.785 451.578 m
222.305 460.586 l
222.613 460.789 l
237.301 454.957 l
242.418 453.828 247.535 452.703 252.652 451.578 c
247.535 450.453 242.418 449.324 237.301 448.203 c
222.613 442.367 l
222.305 442.52 l
227.785 451.578 l
f
17.832 596.578 m
272.832 596.578 l
S
270.285 596.578 m
264.805 605.586 l
265.113 605.789 l
279.801 599.957 l
284.918 598.828 290.035 597.703 295.152 596.578 c
290.035 595.453 284.918 594.324 279.801 593.203 c
265.113 587.367 l
264.805 587.52 l
270.285 596.578 l
f
1399.58 373.137 m
1403.5 369.738 1409.43 370.156 1412.84 374.074 c
1416.24 377.996 1415.82 383.938 1411.9 387.332 c
1407.97 390.734 1402.04 390.324 1398.64 386.398 c
1395.23 382.473 1395.66 376.543 1399.58 373.137 c
f
1260.52 419.883 m
1264.44 416.48 1270.38 416.898 1273.77 420.82 c
1277.18 424.742 1276.76 430.676 1272.84 434.078 c
1268.92 437.48 1262.98 437.062 1259.58 433.141 c
1256.18 429.219 1256.6 423.281 1260.52 419.883 c
f
939.574 220.637 m
943.496 217.238 949.43 217.656 952.832 221.574 c
956.234 225.496 955.812 231.438 951.895 234.836 c
947.969 238.234 942.035 237.824 938.633 233.898 c
935.23 229.973 935.656 224.043 939.574 220.637 c
f
680.332 241.574 m
684.254 238.176 690.191 238.605 693.59 242.52 c
696.992 246.438 696.574 252.371 692.652 255.773 c
688.73 259.18 682.793 258.762 679.395 254.836 c
675.992 250.918 676.41 244.98 680.332 241.574 c
f
1180.34 291.574 m
1184.26 288.176 1190.2 288.605 1193.59 292.52 c
1197 296.438 1196.58 302.371 1192.66 305.773 c
1188.74 309.18 1182.8 308.762 1179.4 304.832 c
1176 300.918 1176.42 294.98 1180.34 291.574 c
f
694.574 393.137 m
698.496 389.738 704.43 390.156 707.832 394.074 c
711.234 397.996 710.812 403.938 706.895 407.332 c
702.969 410.742 697.035 410.316 693.633 406.398 c
690.23 402.477 690.656 396.531 694.574 393.137 c
f
635.332 299.074 m
639.254 295.676 645.191 296.105 648.59 300.02 c
651.992 303.938 651.574 309.871 647.652 313.273 c
643.73 316.68 637.793 316.262 634.395 312.332 c
630.992 308.418 631.41 302.48 635.332 299.074 c
f
912.074 345.637 m
915.996 342.238 921.93 342.656 925.332 346.574 c
928.734 350.496 928.312 356.438 924.395 359.832 c
920.469 363.234 914.535 362.824 911.133 358.898 c
907.73 354.973 908.156 349.043 912.074 345.637 c
f
1474.58 328.137 m
1478.5 324.738 1484.43 325.156 1487.84 329.074 c
1491.24 332.996 1490.82 338.938 1486.9 342.332 c
1482.97 345.734 1477.04 345.324 1473.64 341.398 c
1470.23 337.473 1470.66 331.543 1474.58 328.137 c
f
1612.84 194.074 m
1616.76 190.676 1622.7 191.105 1626.1 195.02 c
1629.5 198.938 1629.08 204.871 1625.16 208.273 c
1621.24 211.68 1615.3 211.262 1611.9 207.336 c
1608.5 203.418 1608.92 197.48 1612.84 194.074 c
f
1572.08 230.637 m
1576 227.238 1581.93 227.656 1585.34 231.574 c
1588.74 235.496 1588.32 241.438 1584.4 244.836 c
1580.47 248.234 1574.54 247.824 1571.14 243.898 c
1567.73 239.973 1568.16 234.043 1572.08 230.637 c
f
1542.08 275.637 m
1546 272.238 1551.93 272.656 1555.34 276.574 c
1558.74 280.496 1558.32 286.438 1554.4 289.832 c
1550.47 293.234 1544.54 292.824 1541.14 288.898 c
1537.73 284.973 1538.16 279.043 1542.08 275.637 c
f
1185.34 179.074 m
1189.26 175.676 1195.2 176.105 1198.59 180.02 c
1202 183.938 1201.58 189.871 1197.66 193.273 c
1193.74 196.68 1187.8 196.262 1184.4 192.336 c
1181 188.418 1181.42 182.48 1185.34 179.074 c
f
346.273 205.82 m
350.195 202.41 356.129 202.844 359.531 206.758 c
362.93 210.684 362.512 216.613 358.59 220.02 c
354.668 223.418 348.734 222.996 345.332 219.074 c
341.93 215.156 342.348 209.23 346.273 205.82 c
f
412.832 384.074 m
416.754 380.676 422.691 381.105 426.09 385.02 c
429.492 388.938 429.074 394.871 425.152 398.277 c
421.23 401.68 415.293 401.262 411.895 397.332 c
408.492 393.418 408.91 387.48 412.832 384.074 c
f
560.332 216.574 m
564.254 213.176 570.191 213.605 573.59 217.52 c
576.992 221.438 576.574 227.371 572.652 230.773 c
568.73 234.18 562.793 233.762 559.395 229.836 c
555.992 225.918 556.41 219.98 560.332 216.574 c
f
515.332 326.574 m
519.254 323.176 525.191 323.605 528.59 327.52 c
531.992 331.438 531.574 337.371 527.652 340.773 c
523.73 344.18 517.793 343.762 514.395 339.832 c
510.992 335.918 511.41 329.98 515.332 326.574 c
f
452.832 211.574 m
456.754 208.176 462.691 208.605 466.09 212.52 c
469.492 216.438 469.074 222.371 465.152 225.773 c
461.23 229.18 455.293 228.762 451.895 224.836 c
448.492 220.918 448.91 214.98 452.832 211.574 c
f
632.832 206.574 m
636.754 203.176 642.691 203.605 646.09 207.52 c
649.492 211.438 649.074 217.371 645.152 220.773 c
641.23 224.18 635.293 223.762 631.895 219.836 c
628.492 215.918 628.91 209.98 632.832 206.574 c
f
272.832 211.574 m
276.754 208.176 282.691 208.605 286.09 212.52 c
289.492 216.438 289.074 222.371 285.152 225.773 c
281.23 229.18 275.293 228.762 271.891 224.836 c
268.492 220.918 268.91 214.98 272.832 211.574 c
f
1244.58 218.137 m
1248.5 214.738 1254.43 215.156 1257.84 219.074 c
1261.24 222.996 1260.82 228.938 1256.9 232.336 c
1252.97 235.734 1247.04 235.324 1243.64 231.398 c
1240.23 227.473 1240.66 221.543 1244.58 218.137 c
f
1330.34 266.574 m
1334.26 263.176 1340.2 263.605 1343.59 267.52 c
1347 271.438 1346.58 277.371 1342.66 280.773 c
1338.74 284.18 1332.8 283.762 1329.4 279.832 c
1326 275.918 1326.42 269.98 1330.34 266.574 c
f
1070.34 181.574 m
1074.26 178.176 1080.2 178.605 1083.59 182.52 c
1087 186.438 1086.58 192.371 1082.66 195.773 c
1078.74 199.18 1072.8 198.762 1069.4 194.836 c
1066 190.918 1066.42 184.98 1070.34 181.574 c
f
750.332 206.574 m
754.254 203.176 760.191 203.605 763.59 207.52 c
766.992 211.438 766.574 217.371 762.652 220.773 c
758.73 224.18 752.793 223.762 749.395 219.836 c
745.992 215.918 746.41 209.98 750.332 206.574 c
f
850.332 211.574 m
854.254 208.176 860.191 208.605 863.59 212.52 c
866.992 216.438 866.574 222.371 862.652 225.773 c
858.73 229.18 852.793 228.762 849.395 224.836 c
845.992 220.918 846.41 214.98 850.332 211.574 c
f
1180.34 214.074 m
1184.26 210.676 1190.2 211.105 1193.59 215.02 c
1197 218.938 1196.58 224.871 1192.66 228.273 c
1188.74 231.68 1182.8 231.262 1179.4 227.336 c
1176 223.418 1176.42 217.48 1180.34 214.074 c
f
495.332 181.574 m
499.254 178.176 505.191 178.605 508.59 182.52 c
511.992 186.438 511.574 192.371 507.652 195.773 c
503.73 199.18 497.793 198.762 494.395 194.836 c
490.992 190.918 491.41 184.98 495.332 181.574 c
f
587.832 176.574 m
591.754 173.176 597.691 173.605 601.09 177.52 c
604.492 181.438 604.074 187.371 600.152 190.773 c
596.23 194.18 590.293 193.762 586.895 189.836 c
583.492 185.918 583.91 179.98 587.832 176.574 c
f
787.832 181.574 m
791.754 178.176 797.691 178.605 801.09 182.52 c
804.492 186.438 804.074 192.371 800.152 195.773 c
796.23 199.18 790.293 198.762 786.895 194.836 c
783.492 190.918 783.91 184.98 787.832 181.574 c
f
400.332 184.074 m
404.254 180.676 410.191 181.105 413.59 185.02 c
416.992 188.938 416.574 194.871 412.652 198.273 c
408.73 201.68 402.793 201.262 399.395 197.336 c
395.992 193.418 396.41 187.48 400.332 184.074 c
f
1297.84 224.074 m
1301.76 220.676 1307.7 221.105 1311.09 225.02 c
1314.5 228.938 1314.08 234.871 1310.16 238.273 c
1306.24 241.68 1300.3 241.262 1296.9 237.336 c
1293.5 233.418 1293.92 227.48 1297.84 224.074 c
f
1402.84 179.074 m
1406.76 175.676 1412.7 176.105 1416.09 180.02 c
1419.5 183.938 1419.08 189.871 1415.16 193.273 c
1411.24 196.68 1405.3 196.262 1401.9 192.336 c
1398.5 188.418 1398.92 182.48 1402.84 179.074 c
f
1467.84 201.574 m
1471.76 198.176 1477.7 198.605 1481.09 202.52 c
1484.5 206.438 1484.08 212.371 1480.16 215.773 c
1476.24 219.18 1470.3 218.762 1466.9 214.836 c
1463.5 210.918 1463.92 204.98 1467.84 201.574 c
f
1097.84 221.574 m
1101.76 218.176 1107.7 218.605 1111.09 222.52 c
1114.5 226.438 1114.08 232.371 1110.16 235.773 c
1106.24 239.18 1100.3 238.762 1096.9 234.836 c
1093.5 230.918 1093.92 224.98 1097.84 221.574 c
f
977.074 193.137 m
980.996 189.738 986.93 190.156 990.332 194.074 c
993.734 197.996 993.312 203.938 989.395 207.336 c
985.469 210.734 979.535 210.324 976.133 206.398 c
972.73 202.473 973.156 196.543 977.074 193.137 c
f
1287.84 184.074 m
1291.76 180.676 1297.7 181.105 1301.09 185.02 c
1304.5 188.938 1304.08 194.871 1300.16 198.273 c
1296.24 201.68 1290.3 201.262 1286.9 197.336 c
1283.5 193.418 1283.92 187.48 1287.84 184.074 c
f
407.074 528.141 m
410.996 524.738 416.93 525.16 420.332 529.078 c
423.734 532.996 423.312 538.938 419.395 542.332 c
415.469 545.742 409.535 545.316 406.133 541.398 c
402.73 537.477 403.156 531.539 407.074 528.141 c
f
177.832 176.574 m
181.754 173.176 187.691 173.605 191.09 177.52 c
194.492 181.438 194.074 187.371 190.152 190.773 c
186.23 194.18 180.293 193.762 176.891 189.836 c
173.492 185.918 173.91 179.98 177.832 176.574 c
f
924.176 453.234 m
928.098 449.828 934.027 450.25 937.434 454.172 c
940.836 458.09 940.418 464.027 936.496 467.426 c
932.574 470.828 926.637 470.41 923.234 466.488 c
919.828 462.57 920.254 456.633 924.176 453.234 c
f
834.176 413.234 m
838.098 409.828 844.027 410.25 847.434 414.172 c
850.836 418.09 850.418 424.027 846.496 427.426 c
842.574 430.828 836.637 430.41 833.234 426.488 c
829.828 422.57 830.254 416.633 834.176 413.234 c
f
1430.34 194.074 m
1434.26 190.676 1440.2 191.105 1443.59 195.02 c
1447 198.938 1446.58 204.871 1442.66 208.273 c
1438.74 211.68 1432.8 211.262 1429.4 207.336 c
1426 203.418 1426.42 197.48 1430.34 194.074 c
f
890.332 194.074 m
894.254 190.676 900.191 191.105 903.59 195.02 c
906.992 198.938 906.574 204.871 902.652 208.273 c
898.73 211.68 892.793 211.262 889.395 207.336 c
885.992 203.418 886.41 197.48 890.332 194.074 c
f
1357.84 194.074 m
1361.76 190.676 1367.7 191.105 1371.09 195.02 c
1374.5 198.938 1374.08 204.871 1370.16 208.273 c
1366.24 211.68 1360.3 211.262 1356.9 207.336 c
1353.5 203.418 1353.92 197.48 1357.84 194.074 c
f
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 7.2832 70.9078] Tm
0 0 Td
/F12_0 7 Tf
(z) 3.5 Tj
311.666 -64 Td
(x) 3.5 Tj
191.334 -9.3328 Td
(Molecules carry horizontal) 81.298 Tj
191.334 -17.8328 Td
(momentum perpendicular to) 87.143 Tj
191.334 -26.3328 Td
(wall through perpendicular ) 84.035 Tj
191.334 -34.8328 Td
(velocity and collisions with ) 83.636 Tj
191.334 -43.3328 Td
(other molecules) 49.406 Tj
28.334 -2.666 Td
(Velocity) 24.507 Tj
134.334 -69.332 Td
(Wall) 13.608 Tj
Q
1040.34 311.574 m
1044.26 308.176 1050.2 308.605 1053.59 312.52 c
1057 316.438 1056.58 322.371 1052.66 325.773 c
1048.74 329.18 1042.8 328.762 1039.4 324.832 c
1036 320.918 1036.42 314.98 1040.34 311.574 c
f
1046.59 319.91 m
1109.09 429.91 l
f
1126.53 460.605 m
1119.62 407.309 l
1107.78 427.617 l
1084.28 427.387 l
1126.53 460.605 l
f
1046.59 319.91 m
1109.09 429.91 l
S
1117.81 445.258 m
1114.36 418.613 l
1108.43 428.766 l
1096.68 428.652 l
1117.81 445.258 l
f
776.859 336.906 m
772.828 333.633 772.219 327.715 775.488 323.684 c
778.762 319.648 784.672 319.031 788.707 322.305 c
792.738 325.574 793.355 331.492 790.086 335.52 c
786.816 339.562 780.895 340.176 776.859 336.906 c
f
783.984 329.297 m
881.461 248.652 l
f
908.664 226.152 m
857.375 242.207 l
879.426 250.332 l
883.281 273.527 l
908.664 226.152 l
f
783.984 329.297 m
881.461 248.652 l
S
895.059 237.402 m
869.414 245.43 l
880.445 249.492 l
882.375 261.086 l
895.059 237.402 l
f
837.832 423.66 m
727.832 486.16 l
f
697.141 503.605 m
750.434 496.695 l
730.129 484.859 l
730.355 461.359 l
697.141 503.605 l
f
837.832 423.66 m
727.832 486.16 l
S
712.484 494.883 m
739.137 491.43 l
728.98 485.508 l
729.094 473.762 l
712.484 494.883 l
f
Q
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font JZGHNU+Helvetica-Oblique
%%EOF
